# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common_types.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12\x63ommon_types.proto\x12\x04h130\"\x8a\x01\n\x0bGitResponse\x12\x12\n\ncommit_sha\x18\x01 \x02(\t\x12\x0e\n\x06\x62ranch\x18\x02 \x02(\t\x12\x0b\n\x03tag\x18\x03 \x02(\t\x12\x14\n\x0c\x62uild_config\x18\x04 \x01(\t\x12\x1a\n\x12\x62ootloader_git_sha\x18\x05 \x01(\t\x12\x18\n\x10\x62ootloader_crc32\x18\x06 \x01(\r\"\x07\n\x05\x45mpty\"\xba\x01\n\x0bSystemState\x12\x17\n\x0f\x62\x61ttery_soc_pct\x18\x01 \x01(\x05\x12\x10\n\x08\x63harging\x18\x02 \x01(\x08\x12\x15\n\rble_connected\x18\x03 \x01(\x08\x12\x1e\n\x16main_soc_temperature_c\x18\x04 \x01(\x05\x12\x1a\n\x12wifi_temperature_c\x18\x05 \x01(\x05\x12\x1b\n\x13storage_in_user_pct\x18\x06 \x01(\x02\x12\x10\n\x08\x62le_rssi\x18\x07 \x01(\x05\"4\n\x12MediaCountsMessage\x12\x0e\n\x06videos\x18\x01 \x01(\r\x12\x0e\n\x06photos\x18\x02 \x01(\r\"#\n\x05Range\x12\r\n\x05start\x18\x01 \x02(\r\x12\x0b\n\x03len\x18\x02 \x02(\r\"\xd3\x02\n\nWifiParams\x12*\n\x04type\x18\x01 \x02(\x0e\x32\x1c.h130.WifiParams.WifiSetting\x12\x0c\n\x04ssid\x18\x02 \x01(\t\x12\x10\n\x08password\x18\x03 \x01(\t\x12\x11\n\tfrequency\x18\x04 \x01(\r\x12\x0f\n\x07\x63ountry\x18\x05 \x01(\t\x12\x42\n\x12\x66requency_strategy\x18\x06 \x01(\x0e\x32&.h130.WifiParams.WifiFrequencyStrategy\"E\n\x0bWifiSetting\x12\x12\n\x0e\x44ISABLED_UNSET\x10\x00\x12\x06\n\x02\x41P\x10\x01\x12\x07\n\x03STA\x10\x02\x12\x07\n\x03P2P\x10\x03\x12\x08\n\x04SCAN\x10\x04\"J\n\x15WifiFrequencyStrategy\x12\x1c\n\x18USE_BEST_AVAILABLE_UNSET\x10\x00\x12\x13\n\x0fUSE_2_4GHZ_ONLY\x10\x01\"T\n\x15\x42\x61tteryStatusResponse\x12\x0b\n\x03soc\x18\x01 \x01(\x05\x12\x0f\n\x07voltage\x18\x02 \x01(\x05\x12\x0c\n\x04temp\x18\x03 \x01(\x05\x12\x0f\n\x07\x63urrent\x18\x04 \x01(\x05\"j\n\x12\x43rashReportDetails\x12\x10\n\x08\x66ilename\x18\x01 \x01(\t\x12\x13\n\x0bline_number\x18\x02 \x01(\r\x12\x19\n\x11\x63rash_description\x18\x03 \x01(\t\x12\x12\n\nerror_code\x18\x04 \x01(\r\"R\n\x0b\x43rashReport\x12\x13\n\x0blog_payload\x18\x01 \x01(\t\x12.\n\x0c\x63rash_report\x18\x02 \x01(\x0b\x32\x18.h130.CrashReportDetails\"(\n\x0cLogsResponse\x12\x18\n\x10logs_zipped_data\x18\x01 \x01(\x0c\"\xa4\x01\n\x0cLocationData\x12\x10\n\x08latitude\x18\x01 \x01(\x02\x12\x11\n\tlongitude\x18\x02 \x01(\x02\x12\x11\n\tspeed_mps\x18\x03 \x01(\r\x12\x10\n\x08utc_time\x18\x04 \x01(\x04\x12\x13\n\x0bheading_deg\x18\x05 \x01(\x05\x12\x11\n\theight_mm\x18\x06 \x01(\x05\x12\x10\n\x08h_acc_mm\x18\x07 \x01(\r\x12\x10\n\x08v_acc_mm\x18\x08 \x01(\r\"\xe6\x01\n\x13TemperatureResponse\x12\x17\n\x0fmain_soc_temp_c\x18\x01 \x02(\x02\x12\x1b\n\x13image_sensor_temp_c\x18\x02 \x01(\x05\x12;\n\x06status\x18\x03 \x01(\x0e\x32+.h130.TemperatureResponse.TemperatureStatus\"\\\n\x11TemperatureStatus\x12\x1c\n\x18TEMPERATURE_NORMAL_UNSET\x10\x00\x12\x13\n\x0fTEMPERATURE_LOW\x10\x01\x12\x14\n\x10TEMPERATURE_HIGH\x10\x02\"\xef\x01\n\x17\x45ncryptionNonceExchange\x12\r\n\x05nonce\x18\x01 \x01(\x0c\x12\x41\n\nchannel_id\x18\x02 \x01(\x0e\x32-.h130.EncryptionNonceExchange.CommChannelType\"\x81\x01\n\x0f\x43ommChannelType\x12\x18\n\x14\x43OMM_CHANNEL_BLE_QCA\x10\x02\x12\x19\n\x15\x43OMM_CHANNEL_WIFI_QCA\x10\x03\x12\x18\n\x14\x43OMM_CHANNEL_BTC_QCA\x10\x04\x12\x1f\n\x1b\x43OMM_CHANNEL_HOST_TO_DEVICE\x10\x10\"D\n\x10OTAUpdateRequest\x12\x30\n\x0crequest_type\x18\x01 \x01(\x0e\x32\x1a.h130.OTAUpdateRequestType\"\xaf\x02\n\x12OTAUpdateEventData\x12.\n\x0cupdate_event\x18\x01 \x01(\x0e\x32\x18.h130.OTAUpdateEventType\x12\x0b\n\x03pct\x18\x02 \x01(\x05\x12\x30\n\x05\x65rror\x18\x03 \x01(\x0e\x32!.h130.OTAUpdateEventData.OTAError\"\xa9\x01\n\x08OTAError\x12\t\n\x05UNSET\x10\x00\x12\x12\n\x0eLOW_DISK_SPACE\x10\x01\x12\x0f\n\x0bLOW_BATTERY\x10\x02\x12\x0f\n\x0b\x41PPLY_ERROR\x10\x03\x12\x16\n\x12GET_CHECKSUM_ERROR\x10\x04\x12\x0f\n\x0bUNZIP_ERROR\x10\x05\x12\x17\n\x13OS_VERSION_MISMATCH\x10\x06\x12\x1a\n\x16SIGNATURE_NOT_VERIFIED\x10\x07\"\xad\x01\n\x11OTAUpdateResponse\x12\x31\n\x11orig_request_type\x18\x01 \x01(\x0b\x32\x16.h130.OTAUpdateRequest\x12*\n\x06status\x18\x02 \x01(\x0e\x32\x18.h130.OTAUpdateEventTypeH\x00\x12\x19\n\x0f\x63urrent_version\x18\x03 \x01(\tH\x00\x12\x12\n\x08\x63hecksum\x18\x04 \x01(\tH\x00\x42\n\n\x08response\"_\n\x1b\x46irmwareUpdateUploadRequest\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x12\x11\n\tstart_pos\x18\x02 \x01(\r\x12\x1f\n\x17overwrite_existing_file\x18\x03 \x01(\x08\">\n\x1c\x46irmwareUpdateUploadResponse\x12\x1e\n\x16ota_uploaded_file_size\x18\x01 \x01(\r\"\x1a\n\x18\x43\x61ptainStateFlyingManual\"\x18\n\x16\x43\x61ptainStatePreTakeOff\"\x17\n\x15\x43\x61ptainStateTakingOff\"\xc0\x01\n\x13\x43\x61ptainStateLanding\x12\x32\n\x07landing\x18\x01 \x01(\x0e\x32!.h130.CaptainStateLanding.Landing\"u\n\x07Landing\x12 \n\x1c\x43\x41PTAIN_STATE_LANDING_NORMAL\x10\x01\x12#\n\x1f\x43\x41PTAIN_STATE_LANDING_EMERGENCY\x10\x02\x12#\n\x1f\x43\x41PTAIN_STATE_LANDING_PREPARING\x10\x03\"\x12\n\x10\x43\x61ptainStateIdle\"\xc8\x04\n\x16\x43\x61ptainStateFlyingTraj\x12\x41\n\x08substate\x18\x01 \x01(\x0e\x32/.h130.CaptainStateFlyingTraj.TrajectorySubstate\x12\x39\n\x04task\x18\x02 \x01(\x0e\x32+.h130.CaptainStateFlyingTraj.TrajectoryTask\"\x8b\x02\n\x12TrajectorySubstate\x12\x36\n2CAPTAIN_STATE_FLYINGTRAJ_GOING_TO_TRAJ_START_POINT\x10\x01\x12\x31\n-CAPTAIN_STATE_FLYINGTRAJ_TRAJECTORY_FOLLOWING\x10\x02\x12/\n+CAPTAIN_STATE_FLYINGTRAJ_FLYING_BACK_NORMAL\x10\x03\x12\x32\n.CAPTAIN_STATE_FLYINGTRAJ_FLYING_BACK_EMERGENCY\x10\x04\x12%\n!CAPTAIN_STATE_FLYINGTRAJ_HOVERING\x10\x05\"\xa1\x01\n\x0eTrajectoryTask\x12$\n CAPTAIN_TRAJECTORY_TASK_FADEAWAY\x10\x01\x12\"\n\x1e\x43\x41PTAIN_TRAJECTORY_TASK_TRIPOD\x10\x02\x12!\n\x1d\x43\x41PTAIN_TRAJECTORY_TASK_ORBIT\x10\x03\x12\"\n\x1e\x43\x41PTAIN_TRAJECTORY_TASK_FOLLOW\x10\x04\"\xc5\x02\n\x0b\x43\x61ptainInfo\x12\x31\n\ntaking_off\x18\x01 \x01(\x0b\x32\x1b.h130.CaptainStateTakingOffH\x00\x12,\n\x07landing\x18\x02 \x01(\x0b\x32\x19.h130.CaptainStateLandingH\x00\x12&\n\x04idle\x18\x03 \x01(\x0b\x32\x16.h130.CaptainStateIdleH\x00\x12\x37\n\rflying_manual\x18\x04 \x01(\x0b\x32\x1e.h130.CaptainStateFlyingManualH\x00\x12\x33\n\x0b\x66lying_traj\x18\x05 \x01(\x0b\x32\x1c.h130.CaptainStateFlyingTrajH\x00\x12\x33\n\x0bpre_takeoff\x18\x06 \x01(\x0b\x32\x1c.h130.CaptainStatePreTakeOffH\x00\x42\n\n\x08response\"?\n\x0fStorageCapacity\x12\x17\n\x0f\x61vailable_bytes\x18\x01 \x01(\x03\x12\x13\n\x0btotal_bytes\x18\x02 \x01(\x03\"\xa8\x01\n\x12OTAScheduledUpdate\x12\x13\n\x0btarget_hash\x18\x01 \x01(\t\x12\x1a\n\x12target_version_tag\x18\x02 \x01(\t\x12$\n\x1cutc_time_update_window_start\x18\x03 \x01(\r\x12#\n\x1butc_time_update_window_stop\x18\x04 \x01(\r\x12\x16\n\x0eis_full_update\x18\x05 \x01(\x08\"3\n OTACancelScheduledUpdateResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\"\'\n\x14\x44isableFlightRequest\x12\x0f\n\x07\x64isable\x18\x01 \x01(\x08\"\x17\n\x15\x44isableFlightResponse\"\xb9\x01\n\x10\x46lightModeConfig\x12\x33\n\x04type\x18\x01 \x01(\x0e\x32%.h130.FlightModeConfig.FlightModeType\"p\n\x0e\x46lightModeType\x12\t\n\x05UNSET\x10\x00\x12\t\n\x05HOVER\x10\x01\x12\n\n\x06REVEAL\x10\x02\x12\n\n\x06\x46OLLOW\x10\x03\x12\t\n\x05ORBIT\x10\x04\x12\x0c\n\x08OVERHEAD\x10\x05\x12\n\n\x06\x43USTOM\x10\x06\x12\x0b\n\x06MANUAL\x10\xff\x01\"\xad\x03\n\x14TrajectoryTypeParams\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\x41\n\x06\x66ollow\x18\x02 \x01(\x0e\x32/.h130.TrajectoryTypeParams.FollowTrajectoryTypeH\x00\x12\x45\n\x08overhead\x18\x03 \x01(\x0e\x32\x31.h130.TrajectoryTypeParams.OverheadTrajectoryTypeH\x00\"_\n\x14\x46ollowTrajectoryType\x12\x15\n\x11\x46OLLOW_TRAJ_UNSET\x10\x00\x12\x16\n\x12\x46OLLOW_TRAJ_NORMAL\x10\x01\x12\x18\n\x14\x46OLLOW_TRAJ_PARALLEL\x10\x02\"j\n\x16OverheadTrajectoryType\x12\x17\n\x13OVERHEAD_TRAJ_UNSET\x10\x00\x12\x19\n\x15OVERHEAD_TRAJ_PICTURE\x10\x01\x12\x1c\n\x18OVERHEAD_TRAJ_PIC_ROTATE\x10\x02\x42\x11\n\x0ftrajectory_type\"O\n\x0e\x44urationParams\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\x10\n\x08\x64uration\x18\x02 \x01(\r\"\xd4\x02\n\x15VideoResolutionParams\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\x33\n\x03res\x18\x02 \x01(\x0e\x32&.h130.VideoResolutionParams.Resolution\x12\x32\n\x03\x66ps\x18\x03 \x01(\x0e\x32%.h130.VideoResolutionParams.Framerate\"Y\n\nResolution\x12\t\n\x05UNSET\x10\x00\x12\x15\n\x11MEDIUM_RESOLUTION\x10\x01\x12\x13\n\x0fHIGH_RESOLUTION\x10\x02\x12\x14\n\x10RESOLUTION_1440P\x10\x03\"J\n\tFramerate\x12\x13\n\x0f\x46RAMERATE_UNSET\x10\x00\x12\x13\n\x0f\x46RAMERATE_30FPS\x10\x01\x12\x13\n\x0f\x46RAMERATE_60FPS\x10\x02\"\xbe\x01\n\x15PhotoResolutionParams\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\x33\n\x03res\x18\x02 \x01(\x0e\x32&.h130.PhotoResolutionParams.Resolution\"C\n\nResolution\x12\t\n\x05UNSET\x10\x00\x12\x15\n\x11MEDIUM_RESOLUTION\x10\x01\x12\x13\n\x0fHIGH_RESOLUTION\x10\x02\"\xc1\x01\n\x17PreviewResolutionParams\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\x35\n\x03res\x18\x02 \x01(\x0e\x32(.h130.PreviewResolutionParams.Resolution\"B\n\nResolution\x12\t\n\x05UNSET\x10\x00\x12\x12\n\x0eLOW_RESOLUTION\x10\x01\x12\x15\n\x11MEDIUM_RESOLUTION\x10\x02\"\xc4\x01\n\x15\x43\x61meraFramerateParams\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\x32\n\x03\x66ps\x18\x02 \x01(\x0e\x32%.h130.CameraFramerateParams.Framerate\"J\n\tFramerate\x12\x13\n\x0f\x46RAMERATE_UNSET\x10\x00\x12\x13\n\x0f\x46RAMERATE_30FPS\x10\x01\x12\x13\n\x0f\x46RAMERATE_60FPS\x10\x02\"M\n\x0e\x44istanceParams\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\x0e\n\x06meters\x18\x02 \x01(\x02\"K\n\x0cHeightParams\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\x0e\n\x06meters\x18\x02 \x01(\x02\"K\n\x0b\x41ngleParams\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\x0f\n\x07\x64\x65grees\x18\x02 \x01(\x02\"\xdc\x01\n\x11\x43\x61ptureTypeParams\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\x39\n\x0c\x63\x61pture_type\x18\x02 \x01(\x0e\x32#.h130.CaptureTypeParams.CaptureType\"_\n\x0b\x43\x61ptureType\x12\t\n\x05UNSET\x10\x00\x12\x0b\n\x07PICTURE\x10\x01\x12\t\n\x05VIDEO\x10\x02\x12\x15\n\x11PICTURE_AND_VIDEO\x10\x03\x12\x16\n\x12\x43ONTINUOUS_PICTURE\x10\x04\"O\n\x0eTrackingParams\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\x10\n\x08tracking\x18\x02 \x01(\x08\"M\n\tHDRParams\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\x13\n\x0bhdr_enabled\x18\x02 \x01(\x08\"O\n\nMFNRParams\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\x14\n\x0cmfnr_enabled\x18\x02 \x01(\x08\"M\n\tRAWParams\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\x13\n\x0braw_enabled\x18\x02 \x01(\x08\"\x89\x01\n\x13RemainingFlightInfo\x12\x1e\n\x16remaining_flights_time\x18\x01 \x01(\r\x12\x1d\n\x15\x65stimated_flight_time\x18\x02 \x01(\r\x12\x33\n\x13\x63urrent_flight_mode\x18\x03 \x01(\x0b\x32\x16.h130.FlightModeConfig\"\xdf\x05\n\x11\x46lightStatusError\x12-\n\x06\x65rrors\x18\x01 \x03(\x0e\x32\x1d.h130.FlightStatusError.Error\"\x9a\x05\n\x05\x45rror\x12\t\n\x05UNSET\x10\x00\x12\x1a\n\x16TAKEOFF_FC_OTHER_ERROR\x10\x01\x12\x19\n\x15TAKEOFF_FC_INITIATING\x10\x02\x12\x1e\n\x1aTAKEOFF_DRONE_IS_NOT_LEVEL\x10\x03\x12\x1d\n\x19TAKEOFF_DRONE_BIG_SHAKING\x10\x04\x12\x18\n\x14TAKEOFF_SENSOR_ERROR\x10\x05\x12\x18\n\x14TAKEOFF_NOT_TRACKING\x10\x06\x12!\n\x1d\x46ORCE_LAND_DRONE_STICK_ON_TOP\x10\x07\x12#\n\x1f\x46ORCE_LAND_DRONE_VERT_COLLISION\x10\x08\x12#\n\x1f\x46ORCE_LAND_DRONE_HORI_COLLISION\x10\t\x12\"\n\x1e\x46ORCE_LAND_DRONE_BIG_VIBRATION\x10\n\x12#\n\x1f\x46ORCE_LAND_BIG_WIND_DISTURBANCE\x10\x0b\x12\x1e\n\x1a\x46ORCE_LAND_MOTOR_SATURATED\x10\x0c\x12\x15\n\x11\x42\x41TTERY_LOW_POWER\x10\r\x12\x1a\n\x16TAKEOFF_UPDATE_PENDING\x10\x0e\x12\x1b\n\x17\x46ORCE_LAND_STORAGE_FULL\x10\x0f\x12\x18\n\x14\x43\x41LIBRATION_REQUIRED\x10\x10\x12\x1f\n\x1b\x46ORCE_LAND_GROUND_TOO_CLOSE\x10\x11\x12\x1f\n\x1bTAKEOFF_TEMPERATURE_TOO_HOT\x10\x12\x12 \n\x1cTAKEOFF_TEMPERATURE_TOO_COLD\x10\x13\x12\x18\n\x14TAKEOFF_STORAGE_FULL\x10\x14\x12\x1e\n\x1aTAKEOFF_UPDATE_IN_PROGRESS\x10\x15\"\xa2\x01\n\x11VideoFormatParams\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\x33\n\x06\x66ormat\x18\x02 \x01(\x0e\x32#.h130.VideoFormatParams.VideoFormat\"+\n\x0bVideoFormat\x12\t\n\x05UNSET\x10\x00\x12\x07\n\x03\x41VC\x10\x01\x12\x08\n\x04HEVC\x10\x02\"?\n\x10\x43ustomFlightMode\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\"/\n\x13USBConnectionStatus\x12\x18\n\x10is_connected_usb\x18\x01 \x01(\x08\"\x86\x02\n\rErrorResponse\x12\x31\n\nerror_code\x18\x01 \x02(\x0e\x32\x1d.h130.ErrorResponse.ErrorCode\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\"\xac\x01\n\tErrorCode\x12\t\n\x05UNSET\x10\x00\x12\x13\n\x0fINVALID_REQUEST\x10\x01\x12\x0e\n\nNO_HANDLER\x10\x02\x12\x0c\n\x08HW_ERROR\x10\x03\x12\x0c\n\x08IO_ERROR\x10\x04\x12\x12\n\x0eINTERNAL_ERROR\x10\x05\x12\x10\n\x0cQCOM_IS_DOWN\x10\x06\x12\x14\n\x10REQUEST_CANCELED\x10\x07\x12\x17\n\x13\x43ONTENT_UNAVAILABLE\x10\x08\"B\n\x16LogFileTransferRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x1a\n\x05range\x18\x02 \x01(\x0b\x32\x0b.h130.Range\"q\n\nLogRequest\x12\"\n\x04type\x18\x01 \x01(\x0e\x32\x14.h130.LogRequestType\x12?\n\x19log_file_transfer_request\x18\x02 \x01(\x0b\x32\x1c.h130.LogFileTransferRequest\"-\n\x0fLogFileMetadata\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04size\x18\x02 \x01(\r\"n\n\x07LogData\x12\x0c\n\x04name\x18\x01 \x01(\t\x12$\n\x0frequested_range\x18\x02 \x01(\x0b\x32\x0b.h130.Range\x12!\n\x0c\x61\x63tual_range\x18\x03 \x01(\x0b\x32\x0b.h130.Range\x12\x0c\n\x04\x64\x61ta\x18\x04 \x01(\x0c\"\xa7\x01\n\x0bLogResponse\x12+\n\rorig_req_type\x18\x01 \x01(\x0e\x32\x14.h130.LogRequestType\x12\x30\n\x11log_file_metadata\x18\x02 \x03(\x0b\x32\x15.h130.LogFileMetadata\x12\x1f\n\x08log_data\x18\x03 \x01(\x0b\x32\r.h130.LogData\x12\x18\n\x10\x64\x65leted_log_file\x18\x04 \x01(\x08\"\x18\n\x16KeepDeviceActiveParams\"\x18\n\x16KeepDeviceActiveResult\"T\n\x11\x43\x61librationResult\x12-\n\tdirection\x18\x01 \x02(\x0e\x32\x1a.h130.CalibrationDirection\x12\x10\n\x08\x66inished\x18\x02 \x02(\x08\"\x85\x02\n\x11\x43\x61librationStatus\x12(\n\x07results\x18\x01 \x03(\x0b\x32\x17.h130.CalibrationResult\x12-\n\tdirection\x18\x02 \x01(\x0e\x32\x1a.h130.CalibrationDirection\x12\x37\n\x05state\x18\x03 \x02(\x0e\x32(.h130.CalibrationStatus.CalibrationState\"^\n\x10\x43\x61librationState\x12\x0e\n\nCALI_UNSET\x10\x00\x12\x0b\n\x07\x43\x41LI_OK\x10\x01\x12\x0e\n\nCALI_ERROR\x10\x02\x12\r\n\tCALI_IDLE\x10\x03\x12\x0e\n\nCALI_DOING\x10\x04\"\x19\n\x17StartCalibrationRequest\"\x1a\n\x18StartCalibrationResponse\"\x18\n\x16StopCalibrationRequest\"\x19\n\x17StopCalibrationResponse\"\x19\n\x17\x41\x63tivateLostModeRequest\"\x1a\n\x18\x41\x63tivateLostModeResponse\"\x1b\n\x19\x44\x65\x61\x63tivateLostModeRequest\"\x1c\n\x1a\x44\x65\x61\x63tivateLostModeResponse\"\x19\n\x17GetLostModeStateRequest\"*\n\x18GetLostModeStateResponse\x12\x0e\n\x06\x61\x63tive\x18\x01 \x02(\x08\"\x14\n\x12LostModeBeginEvent\"\x8e\x01\n\x10LostModeEndEvent\x12+\n\x05\x63\x61use\x18\x01 \x02(\x0e\x32\x1c.h130.LostModeEndEvent.Cause\"M\n\x05\x43\x61use\x12\t\n\x05UNSET\x10\x00\x12\x12\n\x0e\x42UTTON_PRESSED\x10\x01\x12\x0f\n\x0b\x44IAL_TURNED\x10\x02\x12\x0b\n\x07TIMEOUT\x10\x03\x12\x07\n\x03\x41PP\x10\x04\"v\n\rLostModeEvent\x12/\n\x0b\x62\x65gin_event\x18\x01 \x01(\x0b\x32\x18.h130.LostModeBeginEventH\x00\x12+\n\tend_event\x18\x02 \x01(\x0b\x32\x16.h130.LostModeEndEventH\x00\x42\x07\n\x05\x65vent\"\xc3\x02\n\x12\x46lightModeSettings\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\x10\n\x08\x64uration\x18\x02 \x01(\r\x12\x17\n\x0f\x64istance_meters\x18\x03 \x01(\x02\x12\x39\n\x0c\x63\x61pture_type\x18\x04 \x01(\x0e\x32#.h130.CaptureTypeParams.CaptureType\x12\x10\n\x08tracking\x18\x05 \x01(\x08\x12\x33\n\x0ftrajectory_type\x18\x06 \x01(\x0b\x32\x1a.h130.TrajectoryTypeParams\x12)\n\rheight_meters\x18\x07 \x01(\x0b\x32\x12.h130.HeightParams\x12(\n\rangle_degrees\x18\x08 \x01(\x0b\x32\x11.h130.AngleParams\"\xa9\x03\n\x0e\x46lightSettings\x12\x32\n\x12\x63ustom_flight_mode\x18\x01 \x01(\x0b\x32\x16.h130.CustomFlightMode\x12\x30\n\x0ehover_settings\x18\x02 \x01(\x0b\x32\x18.h130.FlightModeSettings\x12\x31\n\x0freveal_settings\x18\x03 \x01(\x0b\x32\x18.h130.FlightModeSettings\x12\x31\n\x0f\x66ollow_settings\x18\x04 \x01(\x0b\x32\x18.h130.FlightModeSettings\x12\x30\n\x0eorbit_settings\x18\x05 \x01(\x0b\x32\x18.h130.FlightModeSettings\x12\x33\n\x11overhead_settings\x18\x06 \x01(\x0b\x32\x18.h130.FlightModeSettings\x12\x31\n\x0fmanual_settings\x18\x07 \x01(\x0b\x32\x18.h130.FlightModeSettings\x12\x31\n\x0f\x63ustom_settings\x18\x08 \x01(\x0b\x32\x18.h130.FlightModeSettings\"\xc9\x01\n\x19\x43\x61meraPhotoParamsSettings\x12\x35\n\x10photo_resolution\x18\x01 \x01(\x0b\x32\x1b.h130.PhotoResolutionParams\x12\x13\n\x0bhdr_enabled\x18\x02 \x01(\x08\x12\x13\n\x0braw_enabled\x18\x03 \x01(\x08\x12\x14\n\x0cmfnr_enabled\x18\x04 \x01(\x08\x12\x35\n\x10\x63\x61mera_framerate\x18\x05 \x01(\x0b\x32\x1b.h130.CameraFramerateParams\"\x96\x01\n\x19\x43\x61meraVideoParamsSettings\x12-\n\x0cvideo_format\x18\x01 \x01(\x0b\x32\x17.h130.VideoFormatParams\x12\x35\n\x10video_resolution\x18\x02 \x01(\x0b\x32\x1b.h130.VideoResolutionParams\x12\x13\n\x0bhdr_enabled\x18\x03 \x01(\x08\"\x84\x01\n\x14\x43\x61meraParamsSettings\x12\x35\n\x0cphoto_params\x18\x01 \x01(\x0b\x32\x1f.h130.CameraPhotoParamsSettings\x12\x35\n\x0cvideo_params\x18\x02 \x01(\x0b\x32\x1f.h130.CameraVideoParamsSettings\"\x83\x03\n\x0e\x43\x61meraSettings\x12\x32\n\x0ehover_settings\x18\x01 \x01(\x0b\x32\x1a.h130.CameraParamsSettings\x12\x33\n\x0freveal_settings\x18\x02 \x01(\x0b\x32\x1a.h130.CameraParamsSettings\x12\x33\n\x0f\x66ollow_settings\x18\x03 \x01(\x0b\x32\x1a.h130.CameraParamsSettings\x12\x32\n\x0eorbit_settings\x18\x04 \x01(\x0b\x32\x1a.h130.CameraParamsSettings\x12\x35\n\x11overhead_settings\x18\x05 \x01(\x0b\x32\x1a.h130.CameraParamsSettings\x12\x33\n\x0fmanual_settings\x18\x06 \x01(\x0b\x32\x1a.h130.CameraParamsSettings\x12\x33\n\x0f\x63ustom_settings\x18\x07 \x01(\x0b\x32\x1a.h130.CameraParamsSettings\"\xe9\x01\n\x14\x43\x61meraHeartBeatState\x12\x35\n\x05state\x18\x01 \x01(\x0e\x32&.h130.CameraHeartBeatState.CameraState\x12\x1c\n\x14video_recording_time\x18\x02 \x01(\x05\"|\n\x0b\x43\x61meraState\x12\x0c\n\x08NOT_USED\x10\x00\x12\x10\n\x0cSELF_TESTING\x10\x01\x12\x08\n\x04IDLE\x10\x02\x12\x0e\n\nPREVIEWING\x10\x03\x12\x13\n\x0fVIDEO_RECORDING\x10\x04\x12\x13\n\x0fSNAPSHOT_TAKING\x10\x05\x12\t\n\x05\x46\x41ULT\x10\x06\"*\n\x13MediaHeartBeatState\x12\x13\n\x0blatest_uuid\x18\x01 \x01(\t\"\x9f\x02\n\rHeartBeatInfo\x12+\n\x0b\x66light_mode\x18\x01 \x01(\x0b\x32\x16.h130.FlightModeConfig\x12\'\n\x0csystem_state\x18\x02 \x01(\x0b\x32\x11.h130.SystemState\x12\'\n\x0c\x63\x61ptain_info\x18\x03 \x01(\x0b\x32\x11.h130.CaptainInfo\x12-\n\x0c\x63\x61pture_type\x18\x04 \x01(\x0b\x32\x17.h130.CaptureTypeParams\x12\x30\n\x0c\x63\x61mera_state\x18\x05 \x01(\x0b\x32\x1a.h130.CameraHeartBeatState\x12.\n\x0bmedia_state\x18\x06 \x01(\x0b\x32\x19.h130.MediaHeartBeatState\"j\n\x14RockerControlCommand\x12\x0f\n\x07seq_num\x18\x01 \x01(\x03\x12\x11\n\ttimestamp\x18\x02 \x01(\x03\x12.\n\x07\x63ommand\x18\x03 \x01(\x0b\x32\x1d.h130.RawManualControlCommand\"\x9a\x01\n\x17RawManualControlCommand\x12.\n\x13\x63ontrol_source_type\x18\x01 \x01(\x0e\x32\x11.h130.ConnectType\x12\x15\n\ris_sport_mode\x18\x02 \x01(\x08\x12\x0c\n\x04roll\x18\x03 \x01(\x02\x12\r\n\x05pitch\x18\x04 \x01(\x02\x12\x0e\n\x06thrust\x18\x05 \x01(\x02\x12\x0b\n\x03yaw\x18\x06 \x01(\x02\"<\n\x14\x43\x61meraCountDownEvent\x12$\n\x1ctake_photo_countdown_seconds\x18\x01 \x01(\r\"X\n\x08SysEvent\x12\"\n\x02id\x18\x01 \x01(\x0e\x32\x16.h130.SysEvent.EventId\"(\n\x07\x45ventId\x12\t\n\x05UNSET\x10\x00\x12\x12\n\x0eLONG_TIME_IDLE\x10\x01*\x99\x01\n\x0b\x43onnectType\x12\x18\n\x14\x43ONNECT_TYPE_UNKNOWN\x10\x00\x12\x14\n\x10\x43ONNECT_TYPE_APP\x10\x01\x12\x13\n\x0f\x43ONNECT_TYPE_SR\x10\x02\x12\x13\n\x0f\x43ONNECT_TYPE_BR\x10\x03\x12\x17\n\x13\x43ONNECT_TYPE_APP_BR\x10\x04\x12\x17\n\x13\x43ONNECT_TYPE_FLYKIT\x10\x05*\xb1\x01\n\x14OTAUpdateRequestType\x12\x0e\n\nTYPE_UNSET\x10\x00\x12\x17\n\x13GET_CURRENT_VERSION\x10\x01\x12\x15\n\x11\x41PPLY_DELTA_PATCH\x10\x02\x12\x12\n\x0e\x41PPLY_FULL_OTA\x10\x03\x12\x18\n\x14GET_CHECKSUM_MD5_SHA\x10\x04\x12\n\n\x06\x43\x41NCEL\x10\x05\x12\x1f\n\x1bREBOOT_AND_SWITCH_PARTITION\x10\x06*}\n\x12OTAUpdateEventType\x12\x18\n\x14UPDATE_EVENT_STARTED\x10\x01\x12\x19\n\x15UPDATE_EVENT_FINISHED\x10\x02\x12\x19\n\x15UPDATE_EVENT_PROGRESS\x10\x03\x12\x17\n\x13UPDATE_EVENT_REBOOT\x10\x04*\xb5\x01\n\x0eLogRequestType\x12\x15\n\x11LOG_REQUEST_UNSET\x10\x00\x12\x17\n\x13\x44\x45\x42UGGING_FILE_LIST\x10\x01\x12\x16\n\x12GET_DEBUGGING_FILE\x10\x02\x12\x14\n\x10\x44\x45LETE_DEBUGGING\x10\x03\x12\x17\n\x13\x41NALYTICS_FILE_LIST\x10\x04\x12\x16\n\x12GET_ANALYTICS_FILE\x10\x05\x12\x14\n\x10\x44\x45LETE_ANALYTICS\x10\x06*g\n\x14\x43\x61librationDirection\x12\r\n\tDIR_UNSET\x10\x00\x12\x08\n\x04X_UP\x10\x01\x12\n\n\x06X_DOWN\x10\x02\x12\x08\n\x04Y_UP\x10\x03\x12\n\n\x06Y_DOWN\x10\x04\x12\x08\n\x04Z_UP\x10\x05\x12\n\n\x06Z_DOWN\x10\x06\x42#\n\x16\x63n.zerozero.proto.h130P\x01\xa2\x02\x06H130PB')

_CONNECTTYPE = DESCRIPTOR.enum_types_by_name['ConnectType']
ConnectType = enum_type_wrapper.EnumTypeWrapper(_CONNECTTYPE)
_OTAUPDATEREQUESTTYPE = DESCRIPTOR.enum_types_by_name['OTAUpdateRequestType']
OTAUpdateRequestType = enum_type_wrapper.EnumTypeWrapper(_OTAUPDATEREQUESTTYPE)
_OTAUPDATEEVENTTYPE = DESCRIPTOR.enum_types_by_name['OTAUpdateEventType']
OTAUpdateEventType = enum_type_wrapper.EnumTypeWrapper(_OTAUPDATEEVENTTYPE)
_LOGREQUESTTYPE = DESCRIPTOR.enum_types_by_name['LogRequestType']
LogRequestType = enum_type_wrapper.EnumTypeWrapper(_LOGREQUESTTYPE)
_CALIBRATIONDIRECTION = DESCRIPTOR.enum_types_by_name['CalibrationDirection']
CalibrationDirection = enum_type_wrapper.EnumTypeWrapper(_CALIBRATIONDIRECTION)
CONNECT_TYPE_UNKNOWN = 0
CONNECT_TYPE_APP = 1
CONNECT_TYPE_SR = 2
CONNECT_TYPE_BR = 3
CONNECT_TYPE_APP_BR = 4
CONNECT_TYPE_FLYKIT = 5
TYPE_UNSET = 0
GET_CURRENT_VERSION = 1
APPLY_DELTA_PATCH = 2
APPLY_FULL_OTA = 3
GET_CHECKSUM_MD5_SHA = 4
CANCEL = 5
REBOOT_AND_SWITCH_PARTITION = 6
UPDATE_EVENT_STARTED = 1
UPDATE_EVENT_FINISHED = 2
UPDATE_EVENT_PROGRESS = 3
UPDATE_EVENT_REBOOT = 4
LOG_REQUEST_UNSET = 0
DEBUGGING_FILE_LIST = 1
GET_DEBUGGING_FILE = 2
DELETE_DEBUGGING = 3
ANALYTICS_FILE_LIST = 4
GET_ANALYTICS_FILE = 5
DELETE_ANALYTICS = 6
DIR_UNSET = 0
X_UP = 1
X_DOWN = 2
Y_UP = 3
Y_DOWN = 4
Z_UP = 5
Z_DOWN = 6


_GITRESPONSE = DESCRIPTOR.message_types_by_name['GitResponse']
_EMPTY = DESCRIPTOR.message_types_by_name['Empty']
_SYSTEMSTATE = DESCRIPTOR.message_types_by_name['SystemState']
_MEDIACOUNTSMESSAGE = DESCRIPTOR.message_types_by_name['MediaCountsMessage']
_RANGE = DESCRIPTOR.message_types_by_name['Range']
_WIFIPARAMS = DESCRIPTOR.message_types_by_name['WifiParams']
_BATTERYSTATUSRESPONSE = DESCRIPTOR.message_types_by_name['BatteryStatusResponse']
_CRASHREPORTDETAILS = DESCRIPTOR.message_types_by_name['CrashReportDetails']
_CRASHREPORT = DESCRIPTOR.message_types_by_name['CrashReport']
_LOGSRESPONSE = DESCRIPTOR.message_types_by_name['LogsResponse']
_LOCATIONDATA = DESCRIPTOR.message_types_by_name['LocationData']
_TEMPERATURERESPONSE = DESCRIPTOR.message_types_by_name['TemperatureResponse']
_ENCRYPTIONNONCEEXCHANGE = DESCRIPTOR.message_types_by_name['EncryptionNonceExchange']
_OTAUPDATEREQUEST = DESCRIPTOR.message_types_by_name['OTAUpdateRequest']
_OTAUPDATEEVENTDATA = DESCRIPTOR.message_types_by_name['OTAUpdateEventData']
_OTAUPDATERESPONSE = DESCRIPTOR.message_types_by_name['OTAUpdateResponse']
_FIRMWAREUPDATEUPLOADREQUEST = DESCRIPTOR.message_types_by_name['FirmwareUpdateUploadRequest']
_FIRMWAREUPDATEUPLOADRESPONSE = DESCRIPTOR.message_types_by_name['FirmwareUpdateUploadResponse']
_CAPTAINSTATEFLYINGMANUAL = DESCRIPTOR.message_types_by_name['CaptainStateFlyingManual']
_CAPTAINSTATEPRETAKEOFF = DESCRIPTOR.message_types_by_name['CaptainStatePreTakeOff']
_CAPTAINSTATETAKINGOFF = DESCRIPTOR.message_types_by_name['CaptainStateTakingOff']
_CAPTAINSTATELANDING = DESCRIPTOR.message_types_by_name['CaptainStateLanding']
_CAPTAINSTATEIDLE = DESCRIPTOR.message_types_by_name['CaptainStateIdle']
_CAPTAINSTATEFLYINGTRAJ = DESCRIPTOR.message_types_by_name['CaptainStateFlyingTraj']
_CAPTAININFO = DESCRIPTOR.message_types_by_name['CaptainInfo']
_STORAGECAPACITY = DESCRIPTOR.message_types_by_name['StorageCapacity']
_OTASCHEDULEDUPDATE = DESCRIPTOR.message_types_by_name['OTAScheduledUpdate']
_OTACANCELSCHEDULEDUPDATERESPONSE = DESCRIPTOR.message_types_by_name['OTACancelScheduledUpdateResponse']
_DISABLEFLIGHTREQUEST = DESCRIPTOR.message_types_by_name['DisableFlightRequest']
_DISABLEFLIGHTRESPONSE = DESCRIPTOR.message_types_by_name['DisableFlightResponse']
_FLIGHTMODECONFIG = DESCRIPTOR.message_types_by_name['FlightModeConfig']
_TRAJECTORYTYPEPARAMS = DESCRIPTOR.message_types_by_name['TrajectoryTypeParams']
_DURATIONPARAMS = DESCRIPTOR.message_types_by_name['DurationParams']
_VIDEORESOLUTIONPARAMS = DESCRIPTOR.message_types_by_name['VideoResolutionParams']
_PHOTORESOLUTIONPARAMS = DESCRIPTOR.message_types_by_name['PhotoResolutionParams']
_PREVIEWRESOLUTIONPARAMS = DESCRIPTOR.message_types_by_name['PreviewResolutionParams']
_CAMERAFRAMERATEPARAMS = DESCRIPTOR.message_types_by_name['CameraFramerateParams']
_DISTANCEPARAMS = DESCRIPTOR.message_types_by_name['DistanceParams']
_HEIGHTPARAMS = DESCRIPTOR.message_types_by_name['HeightParams']
_ANGLEPARAMS = DESCRIPTOR.message_types_by_name['AngleParams']
_CAPTURETYPEPARAMS = DESCRIPTOR.message_types_by_name['CaptureTypeParams']
_TRACKINGPARAMS = DESCRIPTOR.message_types_by_name['TrackingParams']
_HDRPARAMS = DESCRIPTOR.message_types_by_name['HDRParams']
_MFNRPARAMS = DESCRIPTOR.message_types_by_name['MFNRParams']
_RAWPARAMS = DESCRIPTOR.message_types_by_name['RAWParams']
_REMAININGFLIGHTINFO = DESCRIPTOR.message_types_by_name['RemainingFlightInfo']
_FLIGHTSTATUSERROR = DESCRIPTOR.message_types_by_name['FlightStatusError']
_VIDEOFORMATPARAMS = DESCRIPTOR.message_types_by_name['VideoFormatParams']
_CUSTOMFLIGHTMODE = DESCRIPTOR.message_types_by_name['CustomFlightMode']
_USBCONNECTIONSTATUS = DESCRIPTOR.message_types_by_name['USBConnectionStatus']
_ERRORRESPONSE = DESCRIPTOR.message_types_by_name['ErrorResponse']
_LOGFILETRANSFERREQUEST = DESCRIPTOR.message_types_by_name['LogFileTransferRequest']
_LOGREQUEST = DESCRIPTOR.message_types_by_name['LogRequest']
_LOGFILEMETADATA = DESCRIPTOR.message_types_by_name['LogFileMetadata']
_LOGDATA = DESCRIPTOR.message_types_by_name['LogData']
_LOGRESPONSE = DESCRIPTOR.message_types_by_name['LogResponse']
_KEEPDEVICEACTIVEPARAMS = DESCRIPTOR.message_types_by_name['KeepDeviceActiveParams']
_KEEPDEVICEACTIVERESULT = DESCRIPTOR.message_types_by_name['KeepDeviceActiveResult']
_CALIBRATIONRESULT = DESCRIPTOR.message_types_by_name['CalibrationResult']
_CALIBRATIONSTATUS = DESCRIPTOR.message_types_by_name['CalibrationStatus']
_STARTCALIBRATIONREQUEST = DESCRIPTOR.message_types_by_name['StartCalibrationRequest']
_STARTCALIBRATIONRESPONSE = DESCRIPTOR.message_types_by_name['StartCalibrationResponse']
_STOPCALIBRATIONREQUEST = DESCRIPTOR.message_types_by_name['StopCalibrationRequest']
_STOPCALIBRATIONRESPONSE = DESCRIPTOR.message_types_by_name['StopCalibrationResponse']
_ACTIVATELOSTMODEREQUEST = DESCRIPTOR.message_types_by_name['ActivateLostModeRequest']
_ACTIVATELOSTMODERESPONSE = DESCRIPTOR.message_types_by_name['ActivateLostModeResponse']
_DEACTIVATELOSTMODEREQUEST = DESCRIPTOR.message_types_by_name['DeactivateLostModeRequest']
_DEACTIVATELOSTMODERESPONSE = DESCRIPTOR.message_types_by_name['DeactivateLostModeResponse']
_GETLOSTMODESTATEREQUEST = DESCRIPTOR.message_types_by_name['GetLostModeStateRequest']
_GETLOSTMODESTATERESPONSE = DESCRIPTOR.message_types_by_name['GetLostModeStateResponse']
_LOSTMODEBEGINEVENT = DESCRIPTOR.message_types_by_name['LostModeBeginEvent']
_LOSTMODEENDEVENT = DESCRIPTOR.message_types_by_name['LostModeEndEvent']
_LOSTMODEEVENT = DESCRIPTOR.message_types_by_name['LostModeEvent']
_FLIGHTMODESETTINGS = DESCRIPTOR.message_types_by_name['FlightModeSettings']
_FLIGHTSETTINGS = DESCRIPTOR.message_types_by_name['FlightSettings']
_CAMERAPHOTOPARAMSSETTINGS = DESCRIPTOR.message_types_by_name['CameraPhotoParamsSettings']
_CAMERAVIDEOPARAMSSETTINGS = DESCRIPTOR.message_types_by_name['CameraVideoParamsSettings']
_CAMERAPARAMSSETTINGS = DESCRIPTOR.message_types_by_name['CameraParamsSettings']
_CAMERASETTINGS = DESCRIPTOR.message_types_by_name['CameraSettings']
_CAMERAHEARTBEATSTATE = DESCRIPTOR.message_types_by_name['CameraHeartBeatState']
_MEDIAHEARTBEATSTATE = DESCRIPTOR.message_types_by_name['MediaHeartBeatState']
_HEARTBEATINFO = DESCRIPTOR.message_types_by_name['HeartBeatInfo']
_ROCKERCONTROLCOMMAND = DESCRIPTOR.message_types_by_name['RockerControlCommand']
_RAWMANUALCONTROLCOMMAND = DESCRIPTOR.message_types_by_name['RawManualControlCommand']
_CAMERACOUNTDOWNEVENT = DESCRIPTOR.message_types_by_name['CameraCountDownEvent']
_SYSEVENT = DESCRIPTOR.message_types_by_name['SysEvent']
_WIFIPARAMS_WIFISETTING = _WIFIPARAMS.enum_types_by_name['WifiSetting']
_WIFIPARAMS_WIFIFREQUENCYSTRATEGY = _WIFIPARAMS.enum_types_by_name['WifiFrequencyStrategy']
_TEMPERATURERESPONSE_TEMPERATURESTATUS = _TEMPERATURERESPONSE.enum_types_by_name['TemperatureStatus']
_ENCRYPTIONNONCEEXCHANGE_COMMCHANNELTYPE = _ENCRYPTIONNONCEEXCHANGE.enum_types_by_name['CommChannelType']
_OTAUPDATEEVENTDATA_OTAERROR = _OTAUPDATEEVENTDATA.enum_types_by_name['OTAError']
_CAPTAINSTATELANDING_LANDING = _CAPTAINSTATELANDING.enum_types_by_name['Landing']
_CAPTAINSTATEFLYINGTRAJ_TRAJECTORYSUBSTATE = _CAPTAINSTATEFLYINGTRAJ.enum_types_by_name['TrajectorySubstate']
_CAPTAINSTATEFLYINGTRAJ_TRAJECTORYTASK = _CAPTAINSTATEFLYINGTRAJ.enum_types_by_name['TrajectoryTask']
_FLIGHTMODECONFIG_FLIGHTMODETYPE = _FLIGHTMODECONFIG.enum_types_by_name['FlightModeType']
_TRAJECTORYTYPEPARAMS_FOLLOWTRAJECTORYTYPE = _TRAJECTORYTYPEPARAMS.enum_types_by_name['FollowTrajectoryType']
_TRAJECTORYTYPEPARAMS_OVERHEADTRAJECTORYTYPE = _TRAJECTORYTYPEPARAMS.enum_types_by_name['OverheadTrajectoryType']
_VIDEORESOLUTIONPARAMS_RESOLUTION = _VIDEORESOLUTIONPARAMS.enum_types_by_name['Resolution']
_VIDEORESOLUTIONPARAMS_FRAMERATE = _VIDEORESOLUTIONPARAMS.enum_types_by_name['Framerate']
_PHOTORESOLUTIONPARAMS_RESOLUTION = _PHOTORESOLUTIONPARAMS.enum_types_by_name['Resolution']
_PREVIEWRESOLUTIONPARAMS_RESOLUTION = _PREVIEWRESOLUTIONPARAMS.enum_types_by_name['Resolution']
_CAMERAFRAMERATEPARAMS_FRAMERATE = _CAMERAFRAMERATEPARAMS.enum_types_by_name['Framerate']
_CAPTURETYPEPARAMS_CAPTURETYPE = _CAPTURETYPEPARAMS.enum_types_by_name['CaptureType']
_FLIGHTSTATUSERROR_ERROR = _FLIGHTSTATUSERROR.enum_types_by_name['Error']
_VIDEOFORMATPARAMS_VIDEOFORMAT = _VIDEOFORMATPARAMS.enum_types_by_name['VideoFormat']
_ERRORRESPONSE_ERRORCODE = _ERRORRESPONSE.enum_types_by_name['ErrorCode']
_CALIBRATIONSTATUS_CALIBRATIONSTATE = _CALIBRATIONSTATUS.enum_types_by_name['CalibrationState']
_LOSTMODEENDEVENT_CAUSE = _LOSTMODEENDEVENT.enum_types_by_name['Cause']
_CAMERAHEARTBEATSTATE_CAMERASTATE = _CAMERAHEARTBEATSTATE.enum_types_by_name['CameraState']
_SYSEVENT_EVENTID = _SYSEVENT.enum_types_by_name['EventId']
GitResponse = _reflection.GeneratedProtocolMessageType('GitResponse', (_message.Message,), {
  'DESCRIPTOR' : _GITRESPONSE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.GitResponse)
  })
_sym_db.RegisterMessage(GitResponse)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.Empty)
  })
_sym_db.RegisterMessage(Empty)

SystemState = _reflection.GeneratedProtocolMessageType('SystemState', (_message.Message,), {
  'DESCRIPTOR' : _SYSTEMSTATE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.SystemState)
  })
_sym_db.RegisterMessage(SystemState)

MediaCountsMessage = _reflection.GeneratedProtocolMessageType('MediaCountsMessage', (_message.Message,), {
  'DESCRIPTOR' : _MEDIACOUNTSMESSAGE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.MediaCountsMessage)
  })
_sym_db.RegisterMessage(MediaCountsMessage)

Range = _reflection.GeneratedProtocolMessageType('Range', (_message.Message,), {
  'DESCRIPTOR' : _RANGE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.Range)
  })
_sym_db.RegisterMessage(Range)

WifiParams = _reflection.GeneratedProtocolMessageType('WifiParams', (_message.Message,), {
  'DESCRIPTOR' : _WIFIPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.WifiParams)
  })
_sym_db.RegisterMessage(WifiParams)

BatteryStatusResponse = _reflection.GeneratedProtocolMessageType('BatteryStatusResponse', (_message.Message,), {
  'DESCRIPTOR' : _BATTERYSTATUSRESPONSE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.BatteryStatusResponse)
  })
_sym_db.RegisterMessage(BatteryStatusResponse)

CrashReportDetails = _reflection.GeneratedProtocolMessageType('CrashReportDetails', (_message.Message,), {
  'DESCRIPTOR' : _CRASHREPORTDETAILS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CrashReportDetails)
  })
_sym_db.RegisterMessage(CrashReportDetails)

CrashReport = _reflection.GeneratedProtocolMessageType('CrashReport', (_message.Message,), {
  'DESCRIPTOR' : _CRASHREPORT,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CrashReport)
  })
_sym_db.RegisterMessage(CrashReport)

LogsResponse = _reflection.GeneratedProtocolMessageType('LogsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LOGSRESPONSE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.LogsResponse)
  })
_sym_db.RegisterMessage(LogsResponse)

LocationData = _reflection.GeneratedProtocolMessageType('LocationData', (_message.Message,), {
  'DESCRIPTOR' : _LOCATIONDATA,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.LocationData)
  })
_sym_db.RegisterMessage(LocationData)

TemperatureResponse = _reflection.GeneratedProtocolMessageType('TemperatureResponse', (_message.Message,), {
  'DESCRIPTOR' : _TEMPERATURERESPONSE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.TemperatureResponse)
  })
_sym_db.RegisterMessage(TemperatureResponse)

EncryptionNonceExchange = _reflection.GeneratedProtocolMessageType('EncryptionNonceExchange', (_message.Message,), {
  'DESCRIPTOR' : _ENCRYPTIONNONCEEXCHANGE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.EncryptionNonceExchange)
  })
_sym_db.RegisterMessage(EncryptionNonceExchange)

OTAUpdateRequest = _reflection.GeneratedProtocolMessageType('OTAUpdateRequest', (_message.Message,), {
  'DESCRIPTOR' : _OTAUPDATEREQUEST,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.OTAUpdateRequest)
  })
_sym_db.RegisterMessage(OTAUpdateRequest)

OTAUpdateEventData = _reflection.GeneratedProtocolMessageType('OTAUpdateEventData', (_message.Message,), {
  'DESCRIPTOR' : _OTAUPDATEEVENTDATA,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.OTAUpdateEventData)
  })
_sym_db.RegisterMessage(OTAUpdateEventData)

OTAUpdateResponse = _reflection.GeneratedProtocolMessageType('OTAUpdateResponse', (_message.Message,), {
  'DESCRIPTOR' : _OTAUPDATERESPONSE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.OTAUpdateResponse)
  })
_sym_db.RegisterMessage(OTAUpdateResponse)

FirmwareUpdateUploadRequest = _reflection.GeneratedProtocolMessageType('FirmwareUpdateUploadRequest', (_message.Message,), {
  'DESCRIPTOR' : _FIRMWAREUPDATEUPLOADREQUEST,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.FirmwareUpdateUploadRequest)
  })
_sym_db.RegisterMessage(FirmwareUpdateUploadRequest)

FirmwareUpdateUploadResponse = _reflection.GeneratedProtocolMessageType('FirmwareUpdateUploadResponse', (_message.Message,), {
  'DESCRIPTOR' : _FIRMWAREUPDATEUPLOADRESPONSE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.FirmwareUpdateUploadResponse)
  })
_sym_db.RegisterMessage(FirmwareUpdateUploadResponse)

CaptainStateFlyingManual = _reflection.GeneratedProtocolMessageType('CaptainStateFlyingManual', (_message.Message,), {
  'DESCRIPTOR' : _CAPTAINSTATEFLYINGMANUAL,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CaptainStateFlyingManual)
  })
_sym_db.RegisterMessage(CaptainStateFlyingManual)

CaptainStatePreTakeOff = _reflection.GeneratedProtocolMessageType('CaptainStatePreTakeOff', (_message.Message,), {
  'DESCRIPTOR' : _CAPTAINSTATEPRETAKEOFF,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CaptainStatePreTakeOff)
  })
_sym_db.RegisterMessage(CaptainStatePreTakeOff)

CaptainStateTakingOff = _reflection.GeneratedProtocolMessageType('CaptainStateTakingOff', (_message.Message,), {
  'DESCRIPTOR' : _CAPTAINSTATETAKINGOFF,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CaptainStateTakingOff)
  })
_sym_db.RegisterMessage(CaptainStateTakingOff)

CaptainStateLanding = _reflection.GeneratedProtocolMessageType('CaptainStateLanding', (_message.Message,), {
  'DESCRIPTOR' : _CAPTAINSTATELANDING,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CaptainStateLanding)
  })
_sym_db.RegisterMessage(CaptainStateLanding)

CaptainStateIdle = _reflection.GeneratedProtocolMessageType('CaptainStateIdle', (_message.Message,), {
  'DESCRIPTOR' : _CAPTAINSTATEIDLE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CaptainStateIdle)
  })
_sym_db.RegisterMessage(CaptainStateIdle)

CaptainStateFlyingTraj = _reflection.GeneratedProtocolMessageType('CaptainStateFlyingTraj', (_message.Message,), {
  'DESCRIPTOR' : _CAPTAINSTATEFLYINGTRAJ,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CaptainStateFlyingTraj)
  })
_sym_db.RegisterMessage(CaptainStateFlyingTraj)

CaptainInfo = _reflection.GeneratedProtocolMessageType('CaptainInfo', (_message.Message,), {
  'DESCRIPTOR' : _CAPTAININFO,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CaptainInfo)
  })
_sym_db.RegisterMessage(CaptainInfo)

StorageCapacity = _reflection.GeneratedProtocolMessageType('StorageCapacity', (_message.Message,), {
  'DESCRIPTOR' : _STORAGECAPACITY,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.StorageCapacity)
  })
_sym_db.RegisterMessage(StorageCapacity)

OTAScheduledUpdate = _reflection.GeneratedProtocolMessageType('OTAScheduledUpdate', (_message.Message,), {
  'DESCRIPTOR' : _OTASCHEDULEDUPDATE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.OTAScheduledUpdate)
  })
_sym_db.RegisterMessage(OTAScheduledUpdate)

OTACancelScheduledUpdateResponse = _reflection.GeneratedProtocolMessageType('OTACancelScheduledUpdateResponse', (_message.Message,), {
  'DESCRIPTOR' : _OTACANCELSCHEDULEDUPDATERESPONSE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.OTACancelScheduledUpdateResponse)
  })
_sym_db.RegisterMessage(OTACancelScheduledUpdateResponse)

DisableFlightRequest = _reflection.GeneratedProtocolMessageType('DisableFlightRequest', (_message.Message,), {
  'DESCRIPTOR' : _DISABLEFLIGHTREQUEST,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.DisableFlightRequest)
  })
_sym_db.RegisterMessage(DisableFlightRequest)

DisableFlightResponse = _reflection.GeneratedProtocolMessageType('DisableFlightResponse', (_message.Message,), {
  'DESCRIPTOR' : _DISABLEFLIGHTRESPONSE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.DisableFlightResponse)
  })
_sym_db.RegisterMessage(DisableFlightResponse)

FlightModeConfig = _reflection.GeneratedProtocolMessageType('FlightModeConfig', (_message.Message,), {
  'DESCRIPTOR' : _FLIGHTMODECONFIG,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.FlightModeConfig)
  })
_sym_db.RegisterMessage(FlightModeConfig)

TrajectoryTypeParams = _reflection.GeneratedProtocolMessageType('TrajectoryTypeParams', (_message.Message,), {
  'DESCRIPTOR' : _TRAJECTORYTYPEPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.TrajectoryTypeParams)
  })
_sym_db.RegisterMessage(TrajectoryTypeParams)

DurationParams = _reflection.GeneratedProtocolMessageType('DurationParams', (_message.Message,), {
  'DESCRIPTOR' : _DURATIONPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.DurationParams)
  })
_sym_db.RegisterMessage(DurationParams)

VideoResolutionParams = _reflection.GeneratedProtocolMessageType('VideoResolutionParams', (_message.Message,), {
  'DESCRIPTOR' : _VIDEORESOLUTIONPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.VideoResolutionParams)
  })
_sym_db.RegisterMessage(VideoResolutionParams)

PhotoResolutionParams = _reflection.GeneratedProtocolMessageType('PhotoResolutionParams', (_message.Message,), {
  'DESCRIPTOR' : _PHOTORESOLUTIONPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.PhotoResolutionParams)
  })
_sym_db.RegisterMessage(PhotoResolutionParams)

PreviewResolutionParams = _reflection.GeneratedProtocolMessageType('PreviewResolutionParams', (_message.Message,), {
  'DESCRIPTOR' : _PREVIEWRESOLUTIONPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.PreviewResolutionParams)
  })
_sym_db.RegisterMessage(PreviewResolutionParams)

CameraFramerateParams = _reflection.GeneratedProtocolMessageType('CameraFramerateParams', (_message.Message,), {
  'DESCRIPTOR' : _CAMERAFRAMERATEPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CameraFramerateParams)
  })
_sym_db.RegisterMessage(CameraFramerateParams)

DistanceParams = _reflection.GeneratedProtocolMessageType('DistanceParams', (_message.Message,), {
  'DESCRIPTOR' : _DISTANCEPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.DistanceParams)
  })
_sym_db.RegisterMessage(DistanceParams)

HeightParams = _reflection.GeneratedProtocolMessageType('HeightParams', (_message.Message,), {
  'DESCRIPTOR' : _HEIGHTPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.HeightParams)
  })
_sym_db.RegisterMessage(HeightParams)

AngleParams = _reflection.GeneratedProtocolMessageType('AngleParams', (_message.Message,), {
  'DESCRIPTOR' : _ANGLEPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.AngleParams)
  })
_sym_db.RegisterMessage(AngleParams)

CaptureTypeParams = _reflection.GeneratedProtocolMessageType('CaptureTypeParams', (_message.Message,), {
  'DESCRIPTOR' : _CAPTURETYPEPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CaptureTypeParams)
  })
_sym_db.RegisterMessage(CaptureTypeParams)

TrackingParams = _reflection.GeneratedProtocolMessageType('TrackingParams', (_message.Message,), {
  'DESCRIPTOR' : _TRACKINGPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.TrackingParams)
  })
_sym_db.RegisterMessage(TrackingParams)

HDRParams = _reflection.GeneratedProtocolMessageType('HDRParams', (_message.Message,), {
  'DESCRIPTOR' : _HDRPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.HDRParams)
  })
_sym_db.RegisterMessage(HDRParams)

MFNRParams = _reflection.GeneratedProtocolMessageType('MFNRParams', (_message.Message,), {
  'DESCRIPTOR' : _MFNRPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.MFNRParams)
  })
_sym_db.RegisterMessage(MFNRParams)

RAWParams = _reflection.GeneratedProtocolMessageType('RAWParams', (_message.Message,), {
  'DESCRIPTOR' : _RAWPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.RAWParams)
  })
_sym_db.RegisterMessage(RAWParams)

RemainingFlightInfo = _reflection.GeneratedProtocolMessageType('RemainingFlightInfo', (_message.Message,), {
  'DESCRIPTOR' : _REMAININGFLIGHTINFO,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.RemainingFlightInfo)
  })
_sym_db.RegisterMessage(RemainingFlightInfo)

FlightStatusError = _reflection.GeneratedProtocolMessageType('FlightStatusError', (_message.Message,), {
  'DESCRIPTOR' : _FLIGHTSTATUSERROR,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.FlightStatusError)
  })
_sym_db.RegisterMessage(FlightStatusError)

VideoFormatParams = _reflection.GeneratedProtocolMessageType('VideoFormatParams', (_message.Message,), {
  'DESCRIPTOR' : _VIDEOFORMATPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.VideoFormatParams)
  })
_sym_db.RegisterMessage(VideoFormatParams)

CustomFlightMode = _reflection.GeneratedProtocolMessageType('CustomFlightMode', (_message.Message,), {
  'DESCRIPTOR' : _CUSTOMFLIGHTMODE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CustomFlightMode)
  })
_sym_db.RegisterMessage(CustomFlightMode)

USBConnectionStatus = _reflection.GeneratedProtocolMessageType('USBConnectionStatus', (_message.Message,), {
  'DESCRIPTOR' : _USBCONNECTIONSTATUS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.USBConnectionStatus)
  })
_sym_db.RegisterMessage(USBConnectionStatus)

ErrorResponse = _reflection.GeneratedProtocolMessageType('ErrorResponse', (_message.Message,), {
  'DESCRIPTOR' : _ERRORRESPONSE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.ErrorResponse)
  })
_sym_db.RegisterMessage(ErrorResponse)

LogFileTransferRequest = _reflection.GeneratedProtocolMessageType('LogFileTransferRequest', (_message.Message,), {
  'DESCRIPTOR' : _LOGFILETRANSFERREQUEST,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.LogFileTransferRequest)
  })
_sym_db.RegisterMessage(LogFileTransferRequest)

LogRequest = _reflection.GeneratedProtocolMessageType('LogRequest', (_message.Message,), {
  'DESCRIPTOR' : _LOGREQUEST,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.LogRequest)
  })
_sym_db.RegisterMessage(LogRequest)

LogFileMetadata = _reflection.GeneratedProtocolMessageType('LogFileMetadata', (_message.Message,), {
  'DESCRIPTOR' : _LOGFILEMETADATA,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.LogFileMetadata)
  })
_sym_db.RegisterMessage(LogFileMetadata)

LogData = _reflection.GeneratedProtocolMessageType('LogData', (_message.Message,), {
  'DESCRIPTOR' : _LOGDATA,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.LogData)
  })
_sym_db.RegisterMessage(LogData)

LogResponse = _reflection.GeneratedProtocolMessageType('LogResponse', (_message.Message,), {
  'DESCRIPTOR' : _LOGRESPONSE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.LogResponse)
  })
_sym_db.RegisterMessage(LogResponse)

KeepDeviceActiveParams = _reflection.GeneratedProtocolMessageType('KeepDeviceActiveParams', (_message.Message,), {
  'DESCRIPTOR' : _KEEPDEVICEACTIVEPARAMS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.KeepDeviceActiveParams)
  })
_sym_db.RegisterMessage(KeepDeviceActiveParams)

KeepDeviceActiveResult = _reflection.GeneratedProtocolMessageType('KeepDeviceActiveResult', (_message.Message,), {
  'DESCRIPTOR' : _KEEPDEVICEACTIVERESULT,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.KeepDeviceActiveResult)
  })
_sym_db.RegisterMessage(KeepDeviceActiveResult)

CalibrationResult = _reflection.GeneratedProtocolMessageType('CalibrationResult', (_message.Message,), {
  'DESCRIPTOR' : _CALIBRATIONRESULT,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CalibrationResult)
  })
_sym_db.RegisterMessage(CalibrationResult)

CalibrationStatus = _reflection.GeneratedProtocolMessageType('CalibrationStatus', (_message.Message,), {
  'DESCRIPTOR' : _CALIBRATIONSTATUS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CalibrationStatus)
  })
_sym_db.RegisterMessage(CalibrationStatus)

StartCalibrationRequest = _reflection.GeneratedProtocolMessageType('StartCalibrationRequest', (_message.Message,), {
  'DESCRIPTOR' : _STARTCALIBRATIONREQUEST,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.StartCalibrationRequest)
  })
_sym_db.RegisterMessage(StartCalibrationRequest)

StartCalibrationResponse = _reflection.GeneratedProtocolMessageType('StartCalibrationResponse', (_message.Message,), {
  'DESCRIPTOR' : _STARTCALIBRATIONRESPONSE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.StartCalibrationResponse)
  })
_sym_db.RegisterMessage(StartCalibrationResponse)

StopCalibrationRequest = _reflection.GeneratedProtocolMessageType('StopCalibrationRequest', (_message.Message,), {
  'DESCRIPTOR' : _STOPCALIBRATIONREQUEST,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.StopCalibrationRequest)
  })
_sym_db.RegisterMessage(StopCalibrationRequest)

StopCalibrationResponse = _reflection.GeneratedProtocolMessageType('StopCalibrationResponse', (_message.Message,), {
  'DESCRIPTOR' : _STOPCALIBRATIONRESPONSE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.StopCalibrationResponse)
  })
_sym_db.RegisterMessage(StopCalibrationResponse)

ActivateLostModeRequest = _reflection.GeneratedProtocolMessageType('ActivateLostModeRequest', (_message.Message,), {
  'DESCRIPTOR' : _ACTIVATELOSTMODEREQUEST,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.ActivateLostModeRequest)
  })
_sym_db.RegisterMessage(ActivateLostModeRequest)

ActivateLostModeResponse = _reflection.GeneratedProtocolMessageType('ActivateLostModeResponse', (_message.Message,), {
  'DESCRIPTOR' : _ACTIVATELOSTMODERESPONSE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.ActivateLostModeResponse)
  })
_sym_db.RegisterMessage(ActivateLostModeResponse)

DeactivateLostModeRequest = _reflection.GeneratedProtocolMessageType('DeactivateLostModeRequest', (_message.Message,), {
  'DESCRIPTOR' : _DEACTIVATELOSTMODEREQUEST,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.DeactivateLostModeRequest)
  })
_sym_db.RegisterMessage(DeactivateLostModeRequest)

DeactivateLostModeResponse = _reflection.GeneratedProtocolMessageType('DeactivateLostModeResponse', (_message.Message,), {
  'DESCRIPTOR' : _DEACTIVATELOSTMODERESPONSE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.DeactivateLostModeResponse)
  })
_sym_db.RegisterMessage(DeactivateLostModeResponse)

GetLostModeStateRequest = _reflection.GeneratedProtocolMessageType('GetLostModeStateRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETLOSTMODESTATEREQUEST,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.GetLostModeStateRequest)
  })
_sym_db.RegisterMessage(GetLostModeStateRequest)

GetLostModeStateResponse = _reflection.GeneratedProtocolMessageType('GetLostModeStateResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETLOSTMODESTATERESPONSE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.GetLostModeStateResponse)
  })
_sym_db.RegisterMessage(GetLostModeStateResponse)

LostModeBeginEvent = _reflection.GeneratedProtocolMessageType('LostModeBeginEvent', (_message.Message,), {
  'DESCRIPTOR' : _LOSTMODEBEGINEVENT,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.LostModeBeginEvent)
  })
_sym_db.RegisterMessage(LostModeBeginEvent)

LostModeEndEvent = _reflection.GeneratedProtocolMessageType('LostModeEndEvent', (_message.Message,), {
  'DESCRIPTOR' : _LOSTMODEENDEVENT,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.LostModeEndEvent)
  })
_sym_db.RegisterMessage(LostModeEndEvent)

LostModeEvent = _reflection.GeneratedProtocolMessageType('LostModeEvent', (_message.Message,), {
  'DESCRIPTOR' : _LOSTMODEEVENT,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.LostModeEvent)
  })
_sym_db.RegisterMessage(LostModeEvent)

FlightModeSettings = _reflection.GeneratedProtocolMessageType('FlightModeSettings', (_message.Message,), {
  'DESCRIPTOR' : _FLIGHTMODESETTINGS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.FlightModeSettings)
  })
_sym_db.RegisterMessage(FlightModeSettings)

FlightSettings = _reflection.GeneratedProtocolMessageType('FlightSettings', (_message.Message,), {
  'DESCRIPTOR' : _FLIGHTSETTINGS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.FlightSettings)
  })
_sym_db.RegisterMessage(FlightSettings)

CameraPhotoParamsSettings = _reflection.GeneratedProtocolMessageType('CameraPhotoParamsSettings', (_message.Message,), {
  'DESCRIPTOR' : _CAMERAPHOTOPARAMSSETTINGS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CameraPhotoParamsSettings)
  })
_sym_db.RegisterMessage(CameraPhotoParamsSettings)

CameraVideoParamsSettings = _reflection.GeneratedProtocolMessageType('CameraVideoParamsSettings', (_message.Message,), {
  'DESCRIPTOR' : _CAMERAVIDEOPARAMSSETTINGS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CameraVideoParamsSettings)
  })
_sym_db.RegisterMessage(CameraVideoParamsSettings)

CameraParamsSettings = _reflection.GeneratedProtocolMessageType('CameraParamsSettings', (_message.Message,), {
  'DESCRIPTOR' : _CAMERAPARAMSSETTINGS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CameraParamsSettings)
  })
_sym_db.RegisterMessage(CameraParamsSettings)

CameraSettings = _reflection.GeneratedProtocolMessageType('CameraSettings', (_message.Message,), {
  'DESCRIPTOR' : _CAMERASETTINGS,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CameraSettings)
  })
_sym_db.RegisterMessage(CameraSettings)

CameraHeartBeatState = _reflection.GeneratedProtocolMessageType('CameraHeartBeatState', (_message.Message,), {
  'DESCRIPTOR' : _CAMERAHEARTBEATSTATE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CameraHeartBeatState)
  })
_sym_db.RegisterMessage(CameraHeartBeatState)

MediaHeartBeatState = _reflection.GeneratedProtocolMessageType('MediaHeartBeatState', (_message.Message,), {
  'DESCRIPTOR' : _MEDIAHEARTBEATSTATE,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.MediaHeartBeatState)
  })
_sym_db.RegisterMessage(MediaHeartBeatState)

HeartBeatInfo = _reflection.GeneratedProtocolMessageType('HeartBeatInfo', (_message.Message,), {
  'DESCRIPTOR' : _HEARTBEATINFO,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.HeartBeatInfo)
  })
_sym_db.RegisterMessage(HeartBeatInfo)

RockerControlCommand = _reflection.GeneratedProtocolMessageType('RockerControlCommand', (_message.Message,), {
  'DESCRIPTOR' : _ROCKERCONTROLCOMMAND,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.RockerControlCommand)
  })
_sym_db.RegisterMessage(RockerControlCommand)

RawManualControlCommand = _reflection.GeneratedProtocolMessageType('RawManualControlCommand', (_message.Message,), {
  'DESCRIPTOR' : _RAWMANUALCONTROLCOMMAND,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.RawManualControlCommand)
  })
_sym_db.RegisterMessage(RawManualControlCommand)

CameraCountDownEvent = _reflection.GeneratedProtocolMessageType('CameraCountDownEvent', (_message.Message,), {
  'DESCRIPTOR' : _CAMERACOUNTDOWNEVENT,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.CameraCountDownEvent)
  })
_sym_db.RegisterMessage(CameraCountDownEvent)

SysEvent = _reflection.GeneratedProtocolMessageType('SysEvent', (_message.Message,), {
  'DESCRIPTOR' : _SYSEVENT,
  '__module__' : 'common_types_pb2'
  # @@protoc_insertion_point(class_scope:h130.SysEvent)
  })
_sym_db.RegisterMessage(SysEvent)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\026cn.zerozero.proto.h130P\001\242\002\006H130PB'
  _CONNECTTYPE._serialized_start=11987
  _CONNECTTYPE._serialized_end=12140
  _OTAUPDATEREQUESTTYPE._serialized_start=12143
  _OTAUPDATEREQUESTTYPE._serialized_end=12320
  _OTAUPDATEEVENTTYPE._serialized_start=12322
  _OTAUPDATEEVENTTYPE._serialized_end=12447
  _LOGREQUESTTYPE._serialized_start=12450
  _LOGREQUESTTYPE._serialized_end=12631
  _CALIBRATIONDIRECTION._serialized_start=12633
  _CALIBRATIONDIRECTION._serialized_end=12736
  _GITRESPONSE._serialized_start=29
  _GITRESPONSE._serialized_end=167
  _EMPTY._serialized_start=169
  _EMPTY._serialized_end=176
  _SYSTEMSTATE._serialized_start=179
  _SYSTEMSTATE._serialized_end=365
  _MEDIACOUNTSMESSAGE._serialized_start=367
  _MEDIACOUNTSMESSAGE._serialized_end=419
  _RANGE._serialized_start=421
  _RANGE._serialized_end=456
  _WIFIPARAMS._serialized_start=459
  _WIFIPARAMS._serialized_end=798
  _WIFIPARAMS_WIFISETTING._serialized_start=653
  _WIFIPARAMS_WIFISETTING._serialized_end=722
  _WIFIPARAMS_WIFIFREQUENCYSTRATEGY._serialized_start=724
  _WIFIPARAMS_WIFIFREQUENCYSTRATEGY._serialized_end=798
  _BATTERYSTATUSRESPONSE._serialized_start=800
  _BATTERYSTATUSRESPONSE._serialized_end=884
  _CRASHREPORTDETAILS._serialized_start=886
  _CRASHREPORTDETAILS._serialized_end=992
  _CRASHREPORT._serialized_start=994
  _CRASHREPORT._serialized_end=1076
  _LOGSRESPONSE._serialized_start=1078
  _LOGSRESPONSE._serialized_end=1118
  _LOCATIONDATA._serialized_start=1121
  _LOCATIONDATA._serialized_end=1285
  _TEMPERATURERESPONSE._serialized_start=1288
  _TEMPERATURERESPONSE._serialized_end=1518
  _TEMPERATURERESPONSE_TEMPERATURESTATUS._serialized_start=1426
  _TEMPERATURERESPONSE_TEMPERATURESTATUS._serialized_end=1518
  _ENCRYPTIONNONCEEXCHANGE._serialized_start=1521
  _ENCRYPTIONNONCEEXCHANGE._serialized_end=1760
  _ENCRYPTIONNONCEEXCHANGE_COMMCHANNELTYPE._serialized_start=1631
  _ENCRYPTIONNONCEEXCHANGE_COMMCHANNELTYPE._serialized_end=1760
  _OTAUPDATEREQUEST._serialized_start=1762
  _OTAUPDATEREQUEST._serialized_end=1830
  _OTAUPDATEEVENTDATA._serialized_start=1833
  _OTAUPDATEEVENTDATA._serialized_end=2136
  _OTAUPDATEEVENTDATA_OTAERROR._serialized_start=1967
  _OTAUPDATEEVENTDATA_OTAERROR._serialized_end=2136
  _OTAUPDATERESPONSE._serialized_start=2139
  _OTAUPDATERESPONSE._serialized_end=2312
  _FIRMWAREUPDATEUPLOADREQUEST._serialized_start=2314
  _FIRMWAREUPDATEUPLOADREQUEST._serialized_end=2409
  _FIRMWAREUPDATEUPLOADRESPONSE._serialized_start=2411
  _FIRMWAREUPDATEUPLOADRESPONSE._serialized_end=2473
  _CAPTAINSTATEFLYINGMANUAL._serialized_start=2475
  _CAPTAINSTATEFLYINGMANUAL._serialized_end=2501
  _CAPTAINSTATEPRETAKEOFF._serialized_start=2503
  _CAPTAINSTATEPRETAKEOFF._serialized_end=2527
  _CAPTAINSTATETAKINGOFF._serialized_start=2529
  _CAPTAINSTATETAKINGOFF._serialized_end=2552
  _CAPTAINSTATELANDING._serialized_start=2555
  _CAPTAINSTATELANDING._serialized_end=2747
  _CAPTAINSTATELANDING_LANDING._serialized_start=2630
  _CAPTAINSTATELANDING_LANDING._serialized_end=2747
  _CAPTAINSTATEIDLE._serialized_start=2749
  _CAPTAINSTATEIDLE._serialized_end=2767
  _CAPTAINSTATEFLYINGTRAJ._serialized_start=2770
  _CAPTAINSTATEFLYINGTRAJ._serialized_end=3354
  _CAPTAINSTATEFLYINGTRAJ_TRAJECTORYSUBSTATE._serialized_start=2923
  _CAPTAINSTATEFLYINGTRAJ_TRAJECTORYSUBSTATE._serialized_end=3190
  _CAPTAINSTATEFLYINGTRAJ_TRAJECTORYTASK._serialized_start=3193
  _CAPTAINSTATEFLYINGTRAJ_TRAJECTORYTASK._serialized_end=3354
  _CAPTAININFO._serialized_start=3357
  _CAPTAININFO._serialized_end=3682
  _STORAGECAPACITY._serialized_start=3684
  _STORAGECAPACITY._serialized_end=3747
  _OTASCHEDULEDUPDATE._serialized_start=3750
  _OTASCHEDULEDUPDATE._serialized_end=3918
  _OTACANCELSCHEDULEDUPDATERESPONSE._serialized_start=3920
  _OTACANCELSCHEDULEDUPDATERESPONSE._serialized_end=3971
  _DISABLEFLIGHTREQUEST._serialized_start=3973
  _DISABLEFLIGHTREQUEST._serialized_end=4012
  _DISABLEFLIGHTRESPONSE._serialized_start=4014
  _DISABLEFLIGHTRESPONSE._serialized_end=4037
  _FLIGHTMODECONFIG._serialized_start=4040
  _FLIGHTMODECONFIG._serialized_end=4225
  _FLIGHTMODECONFIG_FLIGHTMODETYPE._serialized_start=4113
  _FLIGHTMODECONFIG_FLIGHTMODETYPE._serialized_end=4225
  _TRAJECTORYTYPEPARAMS._serialized_start=4228
  _TRAJECTORYTYPEPARAMS._serialized_end=4657
  _TRAJECTORYTYPEPARAMS_FOLLOWTRAJECTORYTYPE._serialized_start=4435
  _TRAJECTORYTYPEPARAMS_FOLLOWTRAJECTORYTYPE._serialized_end=4530
  _TRAJECTORYTYPEPARAMS_OVERHEADTRAJECTORYTYPE._serialized_start=4532
  _TRAJECTORYTYPEPARAMS_OVERHEADTRAJECTORYTYPE._serialized_end=4638
  _DURATIONPARAMS._serialized_start=4659
  _DURATIONPARAMS._serialized_end=4738
  _VIDEORESOLUTIONPARAMS._serialized_start=4741
  _VIDEORESOLUTIONPARAMS._serialized_end=5081
  _VIDEORESOLUTIONPARAMS_RESOLUTION._serialized_start=4916
  _VIDEORESOLUTIONPARAMS_RESOLUTION._serialized_end=5005
  _VIDEORESOLUTIONPARAMS_FRAMERATE._serialized_start=5007
  _VIDEORESOLUTIONPARAMS_FRAMERATE._serialized_end=5081
  _PHOTORESOLUTIONPARAMS._serialized_start=5084
  _PHOTORESOLUTIONPARAMS._serialized_end=5274
  _PHOTORESOLUTIONPARAMS_RESOLUTION._serialized_start=4916
  _PHOTORESOLUTIONPARAMS_RESOLUTION._serialized_end=4983
  _PREVIEWRESOLUTIONPARAMS._serialized_start=5277
  _PREVIEWRESOLUTIONPARAMS._serialized_end=5470
  _PREVIEWRESOLUTIONPARAMS_RESOLUTION._serialized_start=5404
  _PREVIEWRESOLUTIONPARAMS_RESOLUTION._serialized_end=5470
  _CAMERAFRAMERATEPARAMS._serialized_start=5473
  _CAMERAFRAMERATEPARAMS._serialized_end=5669
  _CAMERAFRAMERATEPARAMS_FRAMERATE._serialized_start=5007
  _CAMERAFRAMERATEPARAMS_FRAMERATE._serialized_end=5081
  _DISTANCEPARAMS._serialized_start=5671
  _DISTANCEPARAMS._serialized_end=5748
  _HEIGHTPARAMS._serialized_start=5750
  _HEIGHTPARAMS._serialized_end=5825
  _ANGLEPARAMS._serialized_start=5827
  _ANGLEPARAMS._serialized_end=5902
  _CAPTURETYPEPARAMS._serialized_start=5905
  _CAPTURETYPEPARAMS._serialized_end=6125
  _CAPTURETYPEPARAMS_CAPTURETYPE._serialized_start=6030
  _CAPTURETYPEPARAMS_CAPTURETYPE._serialized_end=6125
  _TRACKINGPARAMS._serialized_start=6127
  _TRACKINGPARAMS._serialized_end=6206
  _HDRPARAMS._serialized_start=6208
  _HDRPARAMS._serialized_end=6285
  _MFNRPARAMS._serialized_start=6287
  _MFNRPARAMS._serialized_end=6366
  _RAWPARAMS._serialized_start=6368
  _RAWPARAMS._serialized_end=6445
  _REMAININGFLIGHTINFO._serialized_start=6448
  _REMAININGFLIGHTINFO._serialized_end=6585
  _FLIGHTSTATUSERROR._serialized_start=6588
  _FLIGHTSTATUSERROR._serialized_end=7323
  _FLIGHTSTATUSERROR_ERROR._serialized_start=6657
  _FLIGHTSTATUSERROR_ERROR._serialized_end=7323
  _VIDEOFORMATPARAMS._serialized_start=7326
  _VIDEOFORMATPARAMS._serialized_end=7488
  _VIDEOFORMATPARAMS_VIDEOFORMAT._serialized_start=7445
  _VIDEOFORMATPARAMS_VIDEOFORMAT._serialized_end=7488
  _CUSTOMFLIGHTMODE._serialized_start=7490
  _CUSTOMFLIGHTMODE._serialized_end=7553
  _USBCONNECTIONSTATUS._serialized_start=7555
  _USBCONNECTIONSTATUS._serialized_end=7602
  _ERRORRESPONSE._serialized_start=7605
  _ERRORRESPONSE._serialized_end=7867
  _ERRORRESPONSE_ERRORCODE._serialized_start=7695
  _ERRORRESPONSE_ERRORCODE._serialized_end=7867
  _LOGFILETRANSFERREQUEST._serialized_start=7869
  _LOGFILETRANSFERREQUEST._serialized_end=7935
  _LOGREQUEST._serialized_start=7937
  _LOGREQUEST._serialized_end=8050
  _LOGFILEMETADATA._serialized_start=8052
  _LOGFILEMETADATA._serialized_end=8097
  _LOGDATA._serialized_start=8099
  _LOGDATA._serialized_end=8209
  _LOGRESPONSE._serialized_start=8212
  _LOGRESPONSE._serialized_end=8379
  _KEEPDEVICEACTIVEPARAMS._serialized_start=8381
  _KEEPDEVICEACTIVEPARAMS._serialized_end=8405
  _KEEPDEVICEACTIVERESULT._serialized_start=8407
  _KEEPDEVICEACTIVERESULT._serialized_end=8431
  _CALIBRATIONRESULT._serialized_start=8433
  _CALIBRATIONRESULT._serialized_end=8517
  _CALIBRATIONSTATUS._serialized_start=8520
  _CALIBRATIONSTATUS._serialized_end=8781
  _CALIBRATIONSTATUS_CALIBRATIONSTATE._serialized_start=8687
  _CALIBRATIONSTATUS_CALIBRATIONSTATE._serialized_end=8781
  _STARTCALIBRATIONREQUEST._serialized_start=8783
  _STARTCALIBRATIONREQUEST._serialized_end=8808
  _STARTCALIBRATIONRESPONSE._serialized_start=8810
  _STARTCALIBRATIONRESPONSE._serialized_end=8836
  _STOPCALIBRATIONREQUEST._serialized_start=8838
  _STOPCALIBRATIONREQUEST._serialized_end=8862
  _STOPCALIBRATIONRESPONSE._serialized_start=8864
  _STOPCALIBRATIONRESPONSE._serialized_end=8889
  _ACTIVATELOSTMODEREQUEST._serialized_start=8891
  _ACTIVATELOSTMODEREQUEST._serialized_end=8916
  _ACTIVATELOSTMODERESPONSE._serialized_start=8918
  _ACTIVATELOSTMODERESPONSE._serialized_end=8944
  _DEACTIVATELOSTMODEREQUEST._serialized_start=8946
  _DEACTIVATELOSTMODEREQUEST._serialized_end=8973
  _DEACTIVATELOSTMODERESPONSE._serialized_start=8975
  _DEACTIVATELOSTMODERESPONSE._serialized_end=9003
  _GETLOSTMODESTATEREQUEST._serialized_start=9005
  _GETLOSTMODESTATEREQUEST._serialized_end=9030
  _GETLOSTMODESTATERESPONSE._serialized_start=9032
  _GETLOSTMODESTATERESPONSE._serialized_end=9074
  _LOSTMODEBEGINEVENT._serialized_start=9076
  _LOSTMODEBEGINEVENT._serialized_end=9096
  _LOSTMODEENDEVENT._serialized_start=9099
  _LOSTMODEENDEVENT._serialized_end=9241
  _LOSTMODEENDEVENT_CAUSE._serialized_start=9164
  _LOSTMODEENDEVENT_CAUSE._serialized_end=9241
  _LOSTMODEEVENT._serialized_start=9243
  _LOSTMODEEVENT._serialized_end=9361
  _FLIGHTMODESETTINGS._serialized_start=9364
  _FLIGHTMODESETTINGS._serialized_end=9687
  _FLIGHTSETTINGS._serialized_start=9690
  _FLIGHTSETTINGS._serialized_end=10115
  _CAMERAPHOTOPARAMSSETTINGS._serialized_start=10118
  _CAMERAPHOTOPARAMSSETTINGS._serialized_end=10319
  _CAMERAVIDEOPARAMSSETTINGS._serialized_start=10322
  _CAMERAVIDEOPARAMSSETTINGS._serialized_end=10472
  _CAMERAPARAMSSETTINGS._serialized_start=10475
  _CAMERAPARAMSSETTINGS._serialized_end=10607
  _CAMERASETTINGS._serialized_start=10610
  _CAMERASETTINGS._serialized_end=10997
  _CAMERAHEARTBEATSTATE._serialized_start=11000
  _CAMERAHEARTBEATSTATE._serialized_end=11233
  _CAMERAHEARTBEATSTATE_CAMERASTATE._serialized_start=11109
  _CAMERAHEARTBEATSTATE_CAMERASTATE._serialized_end=11233
  _MEDIAHEARTBEATSTATE._serialized_start=11235
  _MEDIAHEARTBEATSTATE._serialized_end=11277
  _HEARTBEATINFO._serialized_start=11280
  _HEARTBEATINFO._serialized_end=11567
  _ROCKERCONTROLCOMMAND._serialized_start=11569
  _ROCKERCONTROLCOMMAND._serialized_end=11675
  _RAWMANUALCONTROLCOMMAND._serialized_start=11678
  _RAWMANUALCONTROLCOMMAND._serialized_end=11832
  _CAMERACOUNTDOWNEVENT._serialized_start=11834
  _CAMERACOUNTDOWNEVENT._serialized_end=11894
  _SYSEVENT._serialized_start=11896
  _SYSEVENT._serialized_end=11984
  _SYSEVENT_EVENTID._serialized_start=11944
  _SYSEVENT_EVENTID._serialized_end=11984
# @@protoc_insertion_point(module_scope)
