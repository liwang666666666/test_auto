# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import webp_rpc_pb2 as webp__rpc__pb2


class WebpRpcStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NotifyJpegName = channel.unary_unary(
                '/h130.WebpRpc/NotifyJpegName',
                request_serializer=webp__rpc__pb2.WebpNameToProcess.SerializeToString,
                response_deserializer=webp__rpc__pb2.WebpCommandAck.FromString,
                )
        self.NotifyYuvName = channel.unary_unary(
                '/h130.WebpRpc/NotifyYuvName',
                request_serializer=webp__rpc__pb2.WebpNameToProcess.SerializeToString,
                response_deserializer=webp__rpc__pb2.WebpCommandAck.FromString,
                )
        self.StartVideo = channel.unary_unary(
                '/h130.WebpRpc/StartVideo',
                request_serializer=webp__rpc__pb2.WebpNameToProcess.SerializeToString,
                response_deserializer=webp__rpc__pb2.WebpCommandAck.FromString,
                )
        self.StopVideo = channel.unary_unary(
                '/h130.WebpRpc/StopVideo',
                request_serializer=webp__rpc__pb2.WebpNameToProcess.SerializeToString,
                response_deserializer=webp__rpc__pb2.WebpCommandAck.FromString,
                )


class WebpRpcServicer(object):
    """Missing associated documentation comment in .proto file."""

    def NotifyJpegName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyYuvName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartVideo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopVideo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WebpRpcServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NotifyJpegName': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyJpegName,
                    request_deserializer=webp__rpc__pb2.WebpNameToProcess.FromString,
                    response_serializer=webp__rpc__pb2.WebpCommandAck.SerializeToString,
            ),
            'NotifyYuvName': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyYuvName,
                    request_deserializer=webp__rpc__pb2.WebpNameToProcess.FromString,
                    response_serializer=webp__rpc__pb2.WebpCommandAck.SerializeToString,
            ),
            'StartVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.StartVideo,
                    request_deserializer=webp__rpc__pb2.WebpNameToProcess.FromString,
                    response_serializer=webp__rpc__pb2.WebpCommandAck.SerializeToString,
            ),
            'StopVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.StopVideo,
                    request_deserializer=webp__rpc__pb2.WebpNameToProcess.FromString,
                    response_serializer=webp__rpc__pb2.WebpCommandAck.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'h130.WebpRpc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WebpRpc(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def NotifyJpegName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/h130.WebpRpc/NotifyJpegName',
            webp__rpc__pb2.WebpNameToProcess.SerializeToString,
            webp__rpc__pb2.WebpCommandAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NotifyYuvName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/h130.WebpRpc/NotifyYuvName',
            webp__rpc__pb2.WebpNameToProcess.SerializeToString,
            webp__rpc__pb2.WebpCommandAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/h130.WebpRpc/StartVideo',
            webp__rpc__pb2.WebpNameToProcess.SerializeToString,
            webp__rpc__pb2.WebpCommandAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/h130.WebpRpc/StopVideo',
            webp__rpc__pb2.WebpNameToProcess.SerializeToString,
            webp__rpc__pb2.WebpCommandAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
