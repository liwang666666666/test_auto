# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ability.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import exception_pb2 as exception__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rability.proto\x12\x07\x61\x62ility\x1a\x0f\x65xception.proto\"Y\n\x07\x41\x62ility\x12$\n\x05level\x18\x01 \x02(\x0e\x32\x15.ability.AbilityLevel\x12(\n\nexceptions\x18\x02 \x03(\x0b\x32\x14.exception.Exception\"\xc9\x04\n\x05\x45vent\x12*\n\x06\x61\x63tion\x18\x01 \x02(\x0e\x32\x1a.ability.Event.EventAction\x12*\n\x06reason\x18\x02 \x02(\x0e\x32\x1a.ability.Event.EventReason\"L\n\x0b\x45ventAction\x12\x0b\n\x07Nothing\x10\x00\x12\x08\n\x04\x45xit\x10\x01\x12\t\n\x05Pause\x10\x02\x12\x08\n\x04Stop\x10\x03\x12\x11\n\rCannotTakeOff\x10\x04\"\x99\x03\n\x0b\x45ventReason\x12\x0e\n\nFCNotReady\x10\x00\x12\x13\n\x0fTrackerNotReady\x10\x01\x12\x14\n\x10TrackLostTimeout\x10\x02\x12\x14\n\x10ObstacleDetected\x10\x03\x12\x1b\n\x17ReturnHomePointNotValid\x10\x04\x12\x0f\n\x0bGPSNotReady\x10\x05\x12\x12\n\x0eGimbalNotReady\x10\x06\x12\x14\n\x10ReachLimitHeight\x10\x07\x12\x14\n\x10TouchedLimitZone\x10\x08\x12\x19\n\x15LoadGESZoneDataFailed\x10\t\x12\x18\n\x14LoadGESGEODataFailed\x10\n\x12\x13\n\x0fStorageNotReady\x10\x0b\x12\x1d\n\x19ObstacleAvoidanceNotReady\x10\x0c\x12\x1c\n\x18MinHeightMaintainEnabled\x10\r\x12\x19\n\x15TrackDistanceTooClose\x10\x0e\x12\x17\n\x13\x46\x43StillCheckNotPass\x10\x32\x12\x10\n\x0c\x46\x43Initiating\x10\x33\"\xbf\x10\n\nAbilitySet\x12$\n\ncpu_status\x18\x01 \x01(\x0b\x32\x10.ability.Ability\x12%\n\x0b\x61\x64sp_status\x18\x02 \x01(\x0b\x32\x10.ability.Ability\x12%\n\x0bsdsp_status\x18\x03 \x01(\x0b\x32\x10.ability.Ability\x12%\n\x0bwifi_status\x18\x04 \x01(\x0b\x32\x10.ability.Ability\x12$\n\nfpv_status\x18\x05 \x01(\x0b\x32\x10.ability.Ability\x12\'\n\rstorage_space\x18\x06 \x01(\x0b\x32\x10.ability.Ability\x12$\n\nota_status\x18\x07 \x01(\x0b\x32\x10.ability.Ability\x12\x33\n\x19\x66ull_power_battery_output\x18\n \x01(\x0b\x32\x10.ability.Ability\x12)\n\x0f\x63\x61n_use_battery\x18\x0b \x01(\x0b\x32\x10.ability.Ability\x12-\n\x13has_battery_warning\x18\x0c \x01(\x0b\x32\x10.ability.Ability\x12,\n\x12has_enough_battery\x18\r \x01(\x0b\x32\x10.ability.Ability\x12&\n\x0c\x63\x61n_take_off\x18\x0e \x01(\x0b\x32\x10.ability.Ability\x12$\n\ncan_flying\x18\x0f \x01(\x0b\x32\x10.ability.Ability\x12\'\n\rcapture_photo\x18\x14 \x01(\x0b\x32\x10.ability.Ability\x12&\n\x0crecord_video\x18\x15 \x01(\x0b\x32\x10.ability.Ability\x12,\n\x12image_stablization\x18\x16 \x01(\x0b\x32\x10.ability.Ability\x12\'\n\rcamera_status\x18\x17 \x01(\x0b\x32\x10.ability.Ability\x12*\n\x10\x66light_essential\x18\x1e \x01(\x0b\x32\x10.ability.Ability\x12(\n\x0e\x66light_optimal\x18\x1f \x01(\x0b\x32\x10.ability.Ability\x12\x30\n\x16navigation_by_position\x18  \x01(\x0b\x32\x10.ability.Ability\x12+\n\x11navigation_by_gps\x18! \x01(\x0b\x32\x10.ability.Ability\x12.\n\x14navigation_by_vision\x18\" \x01(\x0b\x32\x10.ability.Ability\x12+\n\x11takeoff_on_ground\x18# \x01(\x0b\x32\x10.ability.Ability\x12)\n\x0ftakeoff_on_hand\x18$ \x01(\x0b\x32\x10.ability.Ability\x12%\n\x0b\x63\x61n_use_imu\x18( \x01(\x0b\x32\x10.ability.Ability\x12%\n\x0b\x63\x61n_use_mag\x18) \x01(\x0b\x32\x10.ability.Ability\x12\x33\n\x19\x63\x61n_show_battery_capacity\x18* \x01(\x0b\x32\x10.ability.Ability\x12%\n\x0b\x63\x61n_use_gps\x18+ \x01(\x0b\x32\x10.ability.Ability\x12,\n\x12obstacle_detection\x18\x32 \x01(\x0b\x32\x10.ability.Ability\x12/\n\x15\x62rake_before_obstacle\x18\x33 \x01(\x0b\x32\x10.ability.Ability\x12(\n\x0e\x61void_obstacle\x18\x34 \x01(\x0b\x32\x10.ability.Ability\x12.\n\x14\x66ly_without_obstacle\x18\x35 \x01(\x0b\x32\x10.ability.Ability\x12(\n\x0ereturn_to_base\x18< \x01(\x0b\x32\x10.ability.Ability\x12(\n\x0emanual_control\x18= \x01(\x0b\x32\x10.ability.Ability\x12,\n\x12target_follow_mode\x18> \x01(\x0b\x32\x10.ability.Ability\x12)\n\x0ftrack_shot_mode\x18? \x01(\x0b\x32\x10.ability.Ability\x12-\n\x13smart_photo_capture\x18@ \x01(\x0b\x32\x10.ability.Ability\x12!\n\x07tracker\x18\x41 \x01(\x0b\x32\x10.ability.Ability\x12\x32\n\x18\x66reestyle_assist_control\x18\x42 \x01(\x0b\x32\x10.ability.Ability\x12.\n\x14\x63\x61n_cancel_forceland\x18\x43 \x01(\x0b\x32\x10.ability.Ability\x12(\n\x0e\x63\x61n_use_gimbal\x18\x46 \x01(\x0b\x32\x10.ability.Ability\x12%\n\x0bno_fly_zone\x18P \x01(\x0b\x32\x10.ability.Ability\x12&\n\x0climit_height\x18Q \x01(\x0b\x32\x10.ability.Ability\x12&\n\x0climit_flight\x18R \x01(\x0b\x32\x10.ability.Ability\x12+\n\x11\x63\x61n_flight_safety\x18S \x01(\x0b\x32\x10.ability.Ability\x12%\n\x0b\x63\x61n_use_eis\x18T \x01(\x0b\x32\x10.ability.Ability\x12\x35\n\tevent_set\x18\xe7\x07 \x03(\x0b\x32!.ability.AbilitySet.EventSetEntry\x1a?\n\rEventSetEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12\x1d\n\x05value\x18\x02 \x01(\x0b\x32\x0e.ability.Event:\x02\x38\x01*\"\n\x0c\x41\x62ilityLevel\x12\x06\n\x02OK\x10\x00\x12\n\n\x06\x46\x61iled\x10\x01*\x8a\x01\n\tEventType\x12\x13\n\x0f\x45ventTypeReturn\x10\x00\x12\x13\n\x0f\x45ventTypeFollow\x10\x01\x12\x17\n\x13\x45ventTypeTrajectory\x10\x02\x12\x10\n\x0c\x45ventTypeGES\x10\x03\x12\x17\n\x13\x45ventTypeLockTarget\x10\x04\x12\x0f\n\x0b\x45ventTypeFC\x10\x05')

_ABILITYLEVEL = DESCRIPTOR.enum_types_by_name['AbilityLevel']
AbilityLevel = enum_type_wrapper.EnumTypeWrapper(_ABILITYLEVEL)
_EVENTTYPE = DESCRIPTOR.enum_types_by_name['EventType']
EventType = enum_type_wrapper.EnumTypeWrapper(_EVENTTYPE)
OK = 0
Failed = 1
EventTypeReturn = 0
EventTypeFollow = 1
EventTypeTrajectory = 2
EventTypeGES = 3
EventTypeLockTarget = 4
EventTypeFC = 5


_ABILITY = DESCRIPTOR.message_types_by_name['Ability']
_EVENT = DESCRIPTOR.message_types_by_name['Event']
_ABILITYSET = DESCRIPTOR.message_types_by_name['AbilitySet']
_ABILITYSET_EVENTSETENTRY = _ABILITYSET.nested_types_by_name['EventSetEntry']
_EVENT_EVENTACTION = _EVENT.enum_types_by_name['EventAction']
_EVENT_EVENTREASON = _EVENT.enum_types_by_name['EventReason']
Ability = _reflection.GeneratedProtocolMessageType('Ability', (_message.Message,), {
  'DESCRIPTOR' : _ABILITY,
  '__module__' : 'ability_pb2'
  # @@protoc_insertion_point(class_scope:ability.Ability)
  })
_sym_db.RegisterMessage(Ability)

Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), {
  'DESCRIPTOR' : _EVENT,
  '__module__' : 'ability_pb2'
  # @@protoc_insertion_point(class_scope:ability.Event)
  })
_sym_db.RegisterMessage(Event)

AbilitySet = _reflection.GeneratedProtocolMessageType('AbilitySet', (_message.Message,), {

  'EventSetEntry' : _reflection.GeneratedProtocolMessageType('EventSetEntry', (_message.Message,), {
    'DESCRIPTOR' : _ABILITYSET_EVENTSETENTRY,
    '__module__' : 'ability_pb2'
    # @@protoc_insertion_point(class_scope:ability.AbilitySet.EventSetEntry)
    })
  ,
  'DESCRIPTOR' : _ABILITYSET,
  '__module__' : 'ability_pb2'
  # @@protoc_insertion_point(class_scope:ability.AbilitySet)
  })
_sym_db.RegisterMessage(AbilitySet)
_sym_db.RegisterMessage(AbilitySet.EventSetEntry)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _ABILITYSET_EVENTSETENTRY._options = None
  _ABILITYSET_EVENTSETENTRY._serialized_options = b'8\001'
  _ABILITYLEVEL._serialized_start=2836
  _ABILITYLEVEL._serialized_end=2870
  _EVENTTYPE._serialized_start=2873
  _EVENTTYPE._serialized_end=3011
  _ABILITY._serialized_start=43
  _ABILITY._serialized_end=132
  _EVENT._serialized_start=135
  _EVENT._serialized_end=720
  _EVENT_EVENTACTION._serialized_start=232
  _EVENT_EVENTACTION._serialized_end=308
  _EVENT_EVENTREASON._serialized_start=311
  _EVENT_EVENTREASON._serialized_end=720
  _ABILITYSET._serialized_start=723
  _ABILITYSET._serialized_end=2834
  _ABILITYSET_EVENTSETENTRY._serialized_start=2771
  _ABILITYSET_EVENTSETENTRY._serialized_end=2834
# @@protoc_insertion_point(module_scope)
