# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: service.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_types_pb2 as common__types__pb2
import rpc_message_types_pb2 as rpc__message__types__pb2
import media_pb2 as media__pb2
from google.protobuf import descriptor_pb2 as google_dot_protobuf_dot_descriptor__pb2
import camera_pb2 as camera__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rservice.proto\x12\x04h130\x1a\x12\x63ommon_types.proto\x1a\x17rpc_message_types.proto\x1a\x0bmedia.proto\x1a google/protobuf/descriptor.proto\x1a\x0c\x63\x61mera.proto\"\xe9*\n\nRpcRequest\x12\n\n\x02id\x18\x06 \x01(\r\x12\x16\n\x0c\x65\x63ho_request\x18\x01 \x01(\tH\x00\x12\x16\n\x0ctest_request\x18\x02 \x01(\tH\x00\x12#\n\x19set_serial_number_request\x18\x14 \x01(\tH\x00\x12\x30\n\x19get_serial_number_request\x18\x15 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\"\n\x0bgit_request\x18\x16 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12)\n\x10set_name_request\x18\x17 \x01(\x0b\x32\r.h130.BleNameH\x00\x12\'\n\x10get_name_request\x18\x18 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12.\n\x12wifi_start_request\x18\x19 \x01(\x0b\x32\x10.h130.WifiParamsH\x00\x12(\n\x11wifi_stop_request\x18\x1a \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12-\n\x16\x62\x61ttery_status_request\x18\x1b \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12,\n\x15\x63harger_state_request\x18\x1c \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\'\n\x10logs_zip_request\x18\x1d \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\'\n\x10\x62oard_id_request\x18\x1e \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12.\n\x10location_request\x18\x1f \x01(\x0b\x32\x12.h130.LocationDataH\x00\x12.\n\x17get_temperature_request\x18  \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x34\n\x1dget_enable_usb_import_request\x18! \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\'\n\x1dset_enable_usb_import_request\x18\" \x01(\x08H\x00\x12,\n\x15\x63lear_content_request\x18# \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12#\n\x0chalt_request\x18$ \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x35\n\x14set_time_utc_request\x18% \x01(\x0b\x32\x15.h130.RealTimeMessageH\x00\x12.\n\x17get_flight_mode_request\x18& \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x30\n\x19get_flight_status_request\x18\' \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12+\n\x14\x61\x62ort_flight_request\x18( \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x33\n\x1cget_storage_capacity_request\x18) \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12<\n\x16\x64isable_flight_request\x18* \x01(\x0b\x32\x1a.h130.DisableFlightRequestH\x00\x12\x31\n\x1aget_usb_connection_request\x18+ \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12-\n\x16get_enable_adb_request\x18, \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12 \n\x16set_enable_adb_request\x18- \x01(\x08H\x00\x12+\n!set_flight_mode_to_manual_request\x18. \x01(\x08H\x00\x12)\n\x1fset_enable_system_sound_request\x18/ \x01(\x08H\x00\x12\x36\n\x1fget_enable_system_sound_request\x18\x30 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x37\n restore_factory_settings_request\x18\x31 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12H\n\x1eset_pairing_public_key_request\x18< \x01(\x0b\x32\x18.h130.KeyExchangeMessageB\x04\x88\xb5\x18\nH\x00\x12L\n\x1dset_peer_verification_request\x18= \x01(\x0b\x32\x1d.h130.PeerVerificationMessageB\x04\x88\xb5\x18\nH\x00\x12S\n$set_channel_encryption_nonce_request\x18> \x01(\x0b\x32\x1d.h130.EncryptionNonceExchangeB\x04\x88\xb5\x18\nH\x00\x12,\n\x15unpair_device_request\x18? \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x34\n\x1dpairing_wait_for_user_request\x18@ \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12@\n\x18validate_pairing_request\x18\x41 \x01(\x0b\x32\x1c.h130.ValidatePairingRequestH\x00\x12\x42\n\x1akeep_device_active_request\x18\x42 \x01(\x0b\x32\x1c.h130.KeepDeviceActiveParamsH\x00\x12\x43\n\x1a\x61\x63tivate_lost_mode_request\x18\x43 \x01(\x0b\x32\x1d.h130.ActivateLostModeRequestH\x00\x12G\n\x1c\x64\x65\x61\x63tivate_lost_mode_request\x18\x44 \x01(\x0b\x32\x1f.h130.DeactivateLostModeRequestH\x00\x12\x44\n\x1bget_lost_mode_state_request\x18\x45 \x01(\x0b\x32\x1d.h130.GetLostModeStateRequestH\x00\x12-\n\x16heartbeat_info_request\x18\x46 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12/\n\x18media_counts_get_request\x18Z \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12+\n\rmedia_request\x18[ \x01(\x0b\x32\x12.h130.MediaRequestH\x00\x12\x34\n\x12ota_update_request\x18n \x01(\x0b\x32\x16.h130.OTAUpdateRequestH\x00\x12K\n\x1e\x66irmware_update_upload_request\x18o \x01(\x0b\x32!.h130.FirmwareUpdateUploadRequestH\x00\x12@\n\x1cset_scheduled_update_request\x18p \x01(\x0b\x32\x18.h130.OTAScheduledUpdateH\x00\x12\x33\n\x1cget_scheduled_update_request\x18q \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x36\n\x1f\x63\x61ncel_scheduled_update_request\x18r \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12=\n\x1cset_capture_duration_request\x18\x82\x01 \x01(\x0b\x32\x14.h130.DurationParamsH\x00\x12?\n\x1cget_capture_duration_request\x18\x83\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12\x44\n\x1cset_video_resolution_request\x18\x84\x01 \x01(\x0b\x32\x1b.h130.VideoResolutionParamsH\x00\x12?\n\x1cget_video_resolution_request\x18\x85\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12<\n\x1bset_flight_distance_request\x18\x86\x01 \x01(\x0b\x32\x14.h130.DistanceParamsH\x00\x12>\n\x1bget_flight_distance_request\x18\x87\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12<\n\x18set_capture_type_request\x18\x88\x01 \x01(\x0b\x32\x17.h130.CaptureTypeParamsH\x00\x12;\n\x18get_capture_type_request\x18\x89\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12\x35\n\x14set_tracking_request\x18\x8a\x01 \x01(\x0b\x32\x14.h130.TrackingParamsH\x00\x12\x37\n\x14get_tracking_request\x18\x8b\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12:\n\"get_remaining_flights_info_request\x18\x8c\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12<\n\x18set_video_format_request\x18\x8d\x01 \x01(\x0b\x32\x17.h130.VideoFormatParamsH\x00\x12;\n\x18get_video_format_request\x18\x8e\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12\x41\n\x1eset_custom_flight_mode_request\x18\x8f\x01 \x01(\x0b\x32\x16.h130.CustomFlightModeH\x00\x12\x36\n\x1eget_custom_flight_mode_request\x18\x90\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x44\n\x1cset_photo_resolution_request\x18\x91\x01 \x01(\x0b\x32\x1b.h130.PhotoResolutionParamsH\x00\x12?\n\x1cget_photo_resolution_request\x18\x92\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12=\n%get_all_flight_modes_settings_request\x18\x93\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12H\n\x1eset_preview_resolution_request\x18\x94\x01 \x01(\x0b\x32\x1d.h130.PreviewResolutionParamsH\x00\x12\x41\n\x1eget_preview_resolution_request\x18\x95\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12\x31\n\x15set_video_hdr_request\x18\x96\x01 \x01(\x0b\x32\x0f.h130.HDRParamsH\x00\x12\x38\n\x15get_video_hdr_request\x18\x97\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12\x31\n\x15set_photo_hdr_request\x18\x98\x01 \x01(\x0b\x32\x0f.h130.HDRParamsH\x00\x12\x38\n\x15get_photo_hdr_request\x18\x99\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12\x31\n\x15set_photo_raw_request\x18\x9a\x01 \x01(\x0b\x32\x0f.h130.RAWParamsH\x00\x12\x38\n\x15get_photo_raw_request\x18\x9b\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12\x33\n\x16set_photo_mfnr_request\x18\x9c\x01 \x01(\x0b\x32\x10.h130.MFNRParamsH\x00\x12\x39\n\x16get_photo_mfnr_request\x18\x9d\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12\x42\n\x1bset_trajectory_type_request\x18\x9e\x01 \x01(\x0b\x32\x1a.h130.TrajectoryTypeParamsH\x00\x12>\n\x1bget_trajectory_type_request\x18\x9f\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12I\n!set_main_camera_framerate_request\x18\xa0\x01 \x01(\x0b\x32\x1b.h130.CameraFramerateParamsH\x00\x12\x44\n!get_main_camera_framerate_request\x18\xa1\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12\x38\n\x19set_flight_height_request\x18\xa2\x01 \x01(\x0b\x32\x12.h130.HeightParamsH\x00\x12<\n\x19get_flight_height_request\x18\xa3\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12\x36\n\x18set_flight_angle_request\x18\xa4\x01 \x01(\x0b\x32\x11.h130.AngleParamsH\x00\x12;\n\x18get_flight_angle_request\x18\xa5\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12\x37\n\x1fget_all_camera_settings_request\x18\xa6\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x37\n\x1fget_flight_status_error_request\x18\xb4\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12(\n\x0blog_request\x18\xc8\x01 \x01(\x0b\x32\x10.h130.LogRequestH\x00\x12G\n\x1dstart_imu_calibration_request\x18\xdc\x01 \x01(\x0b\x32\x1d.h130.StartCalibrationRequestH\x00\x12\x45\n\x1cstop_imu_calibration_request\x18\xdd\x01 \x01(\x0b\x32\x1c.h130.StopCalibrationRequestH\x00\x12:\n\x1c\x63\x61mera_start_session_request\x18\xf0\x01 \x01(\x0b\x32\x11.camera.SessionIdH\x00\x12\x33\n\x1b\x63\x61mera_stop_session_request\x18\xf1\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\'\n\x1c\x63\x61mera_start_preview_request\x18\xf2\x01 \x01(\x08H\x00\x12%\n\x1a\x63\x61mera_start_video_request\x18\xf3\x01 \x01(\x08H\x00\x12\x31\n\x19\x63\x61mera_take_photo_request\x18\xf4\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12+\n set_udp_server_ipaddress_request\x18\xf5\x01 \x01(\tH\x00\x12?\n\x1eget_generic_asset_file_request\x18\x98\x02 \x01(\x0b\x32\x14.h130.GetFileRequestH\x00\x42\t\n\x07request\"\xd8-\n\x0bRpcResponse\x12\n\n\x02id\x18\x07 \x01(\r\x12(\n\x05\x65rror\x18\x01 \x01(\x0e\x32\x17.h130.RpcResponse.ErrorH\x00\x12\x17\n\recho_response\x18\n \x01(\tH\x00\x12\x17\n\rtest_response\x18\x0b \x01(\tH\x00\x12\x31\n\x1aset_serial_number_response\x18\x1e \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12$\n\x1aget_serial_number_response\x18\x1f \x01(\tH\x00\x12)\n\x0cgit_response\x18  \x01(\x0b\x32\x11.h130.GitResponseH\x00\x12*\n\x11get_name_response\x18! \x01(\x0b\x32\r.h130.BleNameH\x00\x12(\n\x11set_name_response\x18\" \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12*\n\x13wifi_start_response\x18# \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12)\n\x12wifi_stop_response\x18$ \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12>\n\x17\x62\x61ttery_status_response\x18% \x01(\x0b\x32\x1b.h130.BatteryStatusResponseH\x00\x12<\n\x16\x63harger_state_response\x18& \x01(\x0b\x32\x1a.h130.ChargerStateResponseH\x00\x12/\n\x11logs_zip_response\x18\' \x01(\x0b\x32\x12.h130.LogsResponseH\x00\x12\x32\n\x11\x62oard_id_response\x18( \x01(\x0b\x32\x15.h130.BoardIdResponseH\x00\x12(\n\x11location_response\x18) \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12=\n\x18get_temperature_response\x18* \x01(\x0b\x32\x19.h130.TemperatureResponseH\x00\x12(\n\x1eget_enable_usb_import_response\x18+ \x01(\x08H\x00\x12\x35\n\x1eset_enable_usb_import_response\x18, \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12-\n\x16\x63lear_content_response\x18- \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12$\n\rhalt_response\x18. \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12,\n\x15set_time_utc_response\x18/ \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12:\n\x18get_flight_mode_response\x18\x30 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12\x37\n\x1aget_flight_status_response\x18\x31 \x01(\x0b\x32\x11.h130.CaptainInfoH\x00\x12\x1f\n\x15\x61\x62ort_flight_response\x18\x32 \x01(\x08H\x00\x12>\n\x1dget_storage_capacity_response\x18\x33 \x01(\x0b\x32\x15.h130.StorageCapacityH\x00\x12>\n\x17\x64isable_flight_response\x18\x34 \x01(\x0b\x32\x1b.h130.DisableFlightResponseH\x00\x12@\n\x1bget_usb_connection_response\x18\x35 \x01(\x0b\x32\x19.h130.USBConnectionStatusH\x00\x12!\n\x17get_enable_adb_response\x18\x36 \x01(\x08H\x00\x12.\n\x17set_enable_adb_response\x18\x37 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x39\n\"set_flight_mode_to_manual_response\x18\x38 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x37\n set_enable_system_sound_response\x18\x39 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12*\n get_enable_system_sound_response\x18: \x01(\x08H\x00\x12\x38\n!restore_factory_settings_response\x18; \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12I\n\x1fset_pairing_public_key_response\x18\x46 \x01(\x0b\x32\x18.h130.KeyExchangeMessageB\x04\x88\xb5\x18\nH\x00\x12M\n\x1eset_peer_verification_response\x18G \x01(\x0b\x32\x1d.h130.PairingSignatureMessageB\x04\x88\xb5\x18\nH\x00\x12T\n%set_channel_encryption_nonce_response\x18H \x01(\x0b\x32\x1d.h130.EncryptionNonceExchangeB\x04\x88\xb5\x18\nH\x00\x12-\n\x16unpair_device_response\x18I \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x35\n\x1epairing_wait_for_user_response\x18J \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x42\n\x19validate_pairing_response\x18K \x01(\x0b\x32\x1d.h130.ValidatePairingResponseH\x00\x12\x43\n\x1bkeep_device_active_response\x18L \x01(\x0b\x32\x1c.h130.KeepDeviceActiveResultH\x00\x12\x45\n\x1b\x61\x63tivate_lost_mode_response\x18M \x01(\x0b\x32\x1e.h130.ActivateLostModeResponseH\x00\x12I\n\x1d\x64\x65\x61\x63tivate_lost_mode_response\x18N \x01(\x0b\x32 .h130.DeactivateLostModeResponseH\x00\x12\x46\n\x1cget_lost_mode_state_response\x18O \x01(\x0b\x32\x1e.h130.GetLostModeStateResponseH\x00\x12\x36\n\x17heartbeat_info_response\x18P \x01(\x0b\x32\x13.h130.HeartBeatInfoH\x00\x12>\n\x19media_counts_get_response\x18\x64 \x01(\x0b\x32\x19.h130.MediaCountsResponseH\x00\x12-\n\x0emedia_response\x18\x65 \x01(\x0b\x32\x13.h130.MediaResponseH\x00\x12\x36\n\x13ota_update_response\x18x \x01(\x0b\x32\x17.h130.OTAUpdateResponseH\x00\x12M\n\x1f\x66irmware_update_upload_response\x18y \x01(\x0b\x32\".h130.FirmwareUpdateUploadResponseH\x00\x12\'\n\x1dset_scheduled_update_response\x18z \x01(\x08H\x00\x12\x41\n\x1dget_scheduled_update_response\x18{ \x01(\x0b\x32\x18.h130.OTAScheduledUpdateH\x00\x12R\n cancel_scheduled_update_response\x18| \x01(\x0b\x32&.h130.OTACancelScheduledUpdateResponseH\x00\x12\x35\n\x1dset_capture_duration_response\x18\x8c\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12>\n\x1dget_capture_duration_response\x18\x8d\x01 \x01(\x0b\x32\x14.h130.DurationParamsH\x00\x12\x35\n\x1dset_video_resolution_response\x18\x8e\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x45\n\x1dget_video_resolution_response\x18\x8f\x01 \x01(\x0b\x32\x1b.h130.VideoResolutionParamsH\x00\x12\x34\n\x1cset_flight_distance_response\x18\x90\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12=\n\x1cget_flight_distance_response\x18\x91\x01 \x01(\x0b\x32\x14.h130.DistanceParamsH\x00\x12\x31\n\x19set_capture_type_response\x18\x92\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12=\n\x19get_capture_type_response\x18\x93\x01 \x01(\x0b\x32\x17.h130.CaptureTypeParamsH\x00\x12-\n\x15set_tracking_response\x18\x94\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x36\n\x15get_tracking_response\x18\x95\x01 \x01(\x0b\x32\x14.h130.TrackingParamsH\x00\x12I\n#get_remaining_flights_info_response\x18\x96\x01 \x01(\x0b\x32\x19.h130.RemainingFlightInfoH\x00\x12\x31\n\x19set_video_format_response\x18\x97\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12=\n\x19get_video_format_response\x18\x98\x01 \x01(\x0b\x32\x17.h130.VideoFormatParamsH\x00\x12\x44\n get_flight_status_error_response\x18\x99\x01 \x01(\x0b\x32\x17.h130.FlightStatusErrorH\x00\x12\x37\n\x1fset_custom_flight_mode_response\x18\x9a\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x42\n\x1fget_custom_flight_mode_response\x18\x9b\x01 \x01(\x0b\x32\x16.h130.FlightModeConfigH\x00\x12\x35\n\x1dset_photo_resolution_response\x18\x9c\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x45\n\x1dget_photo_resolution_response\x18\x9d\x01 \x01(\x0b\x32\x1b.h130.PhotoResolutionParamsH\x00\x12G\n&get_all_flight_modes_settings_response\x18\x9e\x01 \x01(\x0b\x32\x14.h130.FlightSettingsH\x00\x12\x37\n\x1fset_preview_resolution_response\x18\x9f\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12I\n\x1fget_preview_resolution_response\x18\xa0\x01 \x01(\x0b\x32\x1d.h130.PreviewResolutionParamsH\x00\x12.\n\x16set_video_hdr_response\x18\xa1\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x32\n\x16get_video_hdr_response\x18\xa2\x01 \x01(\x0b\x32\x0f.h130.HDRParamsH\x00\x12.\n\x16set_photo_hdr_response\x18\xa3\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x32\n\x16get_photo_hdr_response\x18\xa4\x01 \x01(\x0b\x32\x0f.h130.HDRParamsH\x00\x12.\n\x16set_photo_raw_response\x18\xa5\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x32\n\x16get_photo_raw_response\x18\xa6\x01 \x01(\x0b\x32\x0f.h130.RAWParamsH\x00\x12/\n\x17set_photo_mfnr_response\x18\xa7\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x34\n\x17get_photo_mfnr_response\x18\xa8\x01 \x01(\x0b\x32\x10.h130.MFNRParamsH\x00\x12\x34\n\x1cset_trajectory_type_response\x18\xa9\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x43\n\x1cget_trajectory_type_response\x18\xaa\x01 \x01(\x0b\x32\x1a.h130.TrajectoryTypeParamsH\x00\x12:\n\"set_main_camera_framerate_response\x18\xab\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12J\n\"get_main_camera_framerate_response\x18\xac\x01 \x01(\x0b\x32\x1b.h130.CameraFramerateParamsH\x00\x12\x32\n\x1aset_flight_height_response\x18\xad\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x39\n\x1aget_flight_height_response\x18\xae\x01 \x01(\x0b\x32\x12.h130.HeightParamsH\x00\x12\x31\n\x19set_flight_angle_response\x18\xaf\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x37\n\x19get_flight_angle_response\x18\xb0\x01 \x01(\x0b\x32\x11.h130.AngleParamsH\x00\x12\x41\n get_all_camera_settings_response\x18\xb1\x01 \x01(\x0b\x32\x14.h130.CameraSettingsH\x00\x12.\n\x0e\x65rror_response\x18\xbe\x01 \x01(\x0b\x32\x13.h130.ErrorResponseH\x00\x12*\n\x0clog_response\x18\xd2\x01 \x01(\x0b\x32\x11.h130.LogResponseH\x00\x12I\n\x1estart_imu_calibration_response\x18\xe6\x01 \x01(\x0b\x32\x1e.h130.StartCalibrationResponseH\x00\x12G\n\x1dstop_imu_calibration_response\x18\xe7\x01 \x01(\x0b\x32\x1d.h130.StopCalibrationResponseH\x00\x12;\n\x1d\x63\x61mera_start_session_response\x18\xfa\x01 \x01(\x0b\x32\x11.camera.SessionIdH\x00\x12\x34\n\x1c\x63\x61mera_stop_session_response\x18\xfb\x01 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12(\n\x1d\x63\x61mera_start_preview_response\x18\xfc\x01 \x01(\x08H\x00\x12&\n\x1b\x63\x61mera_start_video_response\x18\xfd\x01 \x01(\x08H\x00\x12%\n\x1a\x63\x61mera_take_photo_response\x18\xfe\x01 \x01(\x08H\x00\x12%\n\x1a\x63\x61mera_stop_photo_response\x18\xff\x01 \x01(\x08H\x00\x12\x39\n!set_udp_server_ipaddress_response\x18\x80\x02 \x01(\x0b\x32\x0b.h130.EmptyH\x00\x12\x41\n\x1fget_generic_asset_file_response\x18\x98\x02 \x01(\x0b\x32\x15.h130.GetFileResponseH\x00\"\x84\x01\n\x05\x45rror\x12\x13\n\x0fINVALID_REQUEST\x10\x01\x12\x0e\n\nNO_HANDLER\x10\x02\x12\x0c\n\x08HW_ERROR\x10\x03\x12\x0c\n\x08IO_ERROR\x10\x04\x12\x12\n\x0eINTERNAL_ERROR\x10\x05\x12\x10\n\x0cQCOM_IS_DOWN\x10\x06\x12\x14\n\x10REQUEST_CANCELED\x10\x07\x42\n\n\x08response*j\n\rSecurityLevel\x12\x11\n\rUNAUTH_CLIENT\x10\n\x12\x0f\n\x0b\x41UTH_CLIENT\x10\x14\x12\x07\n\x03\x41PP\x10\x1e\x12\x10\n\x0cINTERNAL_APP\x10(\x12\x0f\n\x0bINTERNAL_FW\x10\x32\x12\t\n\x05\x44\x45\x42UG\x10<:Z\n\x0esecurity_level\x12\x1d.google.protobuf.FieldOptions\x18\xd1\x86\x03 \x01(\x0e\x32\x13.h130.SecurityLevel:\x0cINTERNAL_APPB#\n\x16\x63n.zerozero.proto.h130P\x01\xa2\x02\x06H130PB')

_SECURITYLEVEL = DESCRIPTOR.enum_types_by_name['SecurityLevel']
SecurityLevel = enum_type_wrapper.EnumTypeWrapper(_SECURITYLEVEL)
UNAUTH_CLIENT = 10
AUTH_CLIENT = 20
APP = 30
INTERNAL_APP = 40
INTERNAL_FW = 50
DEBUG = 60

SECURITY_LEVEL_FIELD_NUMBER = 50001
security_level = DESCRIPTOR.extensions_by_name['security_level']

_RPCREQUEST = DESCRIPTOR.message_types_by_name['RpcRequest']
_RPCRESPONSE = DESCRIPTOR.message_types_by_name['RpcResponse']
_RPCRESPONSE_ERROR = _RPCRESPONSE.enum_types_by_name['Error']
RpcRequest = _reflection.GeneratedProtocolMessageType('RpcRequest', (_message.Message,), {
  'DESCRIPTOR' : _RPCREQUEST,
  '__module__' : 'service_pb2'
  # @@protoc_insertion_point(class_scope:h130.RpcRequest)
  })
_sym_db.RegisterMessage(RpcRequest)

RpcResponse = _reflection.GeneratedProtocolMessageType('RpcResponse', (_message.Message,), {
  'DESCRIPTOR' : _RPCRESPONSE,
  '__module__' : 'service_pb2'
  # @@protoc_insertion_point(class_scope:h130.RpcResponse)
  })
_sym_db.RegisterMessage(RpcResponse)

if _descriptor._USE_C_DESCRIPTORS == False:
  google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(security_level)

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\026cn.zerozero.proto.h130P\001\242\002\006H130PB'
  _RPCREQUEST.fields_by_name['set_pairing_public_key_request']._options = None
  _RPCREQUEST.fields_by_name['set_pairing_public_key_request']._serialized_options = b'\210\265\030\n'
  _RPCREQUEST.fields_by_name['set_peer_verification_request']._options = None
  _RPCREQUEST.fields_by_name['set_peer_verification_request']._serialized_options = b'\210\265\030\n'
  _RPCREQUEST.fields_by_name['set_channel_encryption_nonce_request']._options = None
  _RPCREQUEST.fields_by_name['set_channel_encryption_nonce_request']._serialized_options = b'\210\265\030\n'
  _RPCRESPONSE.fields_by_name['set_pairing_public_key_response']._options = None
  _RPCRESPONSE.fields_by_name['set_pairing_public_key_response']._serialized_options = b'\210\265\030\n'
  _RPCRESPONSE.fields_by_name['set_peer_verification_response']._options = None
  _RPCRESPONSE.fields_by_name['set_peer_verification_response']._serialized_options = b'\210\265\030\n'
  _RPCRESPONSE.fields_by_name['set_channel_encryption_nonce_response']._options = None
  _RPCRESPONSE.fields_by_name['set_channel_encryption_nonce_response']._serialized_options = b'\210\265\030\n'
  _SECURITYLEVEL._serialized_start=11464
  _SECURITYLEVEL._serialized_end=11570
  _RPCREQUEST._serialized_start=130
  _RPCREQUEST._serialized_end=5611
  _RPCRESPONSE._serialized_start=5614
  _RPCRESPONSE._serialized_end=11462
  _RPCRESPONSE_ERROR._serialized_start=11318
  _RPCRESPONSE_ERROR._serialized_end=11450
# @@protoc_insertion_point(module_scope)
