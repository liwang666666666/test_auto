# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: configuration.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13\x63onfiguration.proto\x12\x06\x63onfig\"\x18\n\x06Vector\x12\x0e\n\x06values\x18\x01 \x03(\x02\"&\n\x06Matrix\x12\x1c\n\x04rows\x18\x01 \x03(\x0b\x32\x0e.config.Vector\"K\n\x0cLinearAdjust\x12\x1d\n\x05scale\x18\x01 \x01(\x0b\x32\x0e.config.Vector\x12\x1c\n\x04\x62ias\x18\x02 \x01(\x0b\x32\x0e.config.Vector\"#\n\tEISConfig\x12\x16\n\x0e\x65nable_imu_log\x18\x01 \x01(\x08\"\x91\x01\n\tIMUConfig\x12#\n\x05\x61\x63\x63\x65l\x18\x01 \x01(\x0b\x32\x14.config.LinearAdjust\x12\"\n\x04gyro\x18\x02 \x01(\x0b\x32\x14.config.LinearAdjust\x12\x19\n\x01R\x18\x03 \x01(\x0b\x32\x0e.config.Matrix\x12 \n\x08rotation\x18\x04 \x01(\x0b\x32\x0e.config.Vector\"A\n\x0bServoConfig\x12\x10\n\x08\x61\x64\x63_zero\x18\x01 \x01(\x05\x12\x0f\n\x07\x61\x64\x63_max\x18\x02 \x01(\x05\x12\x0f\n\x07\x61\x64\x63_min\x18\x03 \x01(\x05\"*\n\rOptflowConfig\x12\x19\n\x01R\x18\x01 \x01(\x0b\x32\x0e.config.Matrix\"I\n\tMagConfig\x12!\n\x03mag\x18\x01 \x01(\x0b\x32\x14.config.LinearAdjust\x12\x19\n\x01R\x18\x02 \x01(\x0b\x32\x0e.config.Matrix\".\n\x11MagCurrentPolyCoe\x12\x19\n\x01y\x18\x01 \x01(\x0b\x32\x0e.config.Vector\"\x89\x02\n\x10MagCurrentParams\x12\x30\n\rmotor1_params\x18\x01 \x01(\x0b\x32\x19.config.MagCurrentPolyCoe\x12\x30\n\rmotor2_params\x18\x02 \x01(\x0b\x32\x19.config.MagCurrentPolyCoe\x12\x30\n\rmotor3_params\x18\x03 \x01(\x0b\x32\x19.config.MagCurrentPolyCoe\x12\x30\n\rmotor4_params\x18\x04 \x01(\x0b\x32\x19.config.MagCurrentPolyCoe\x12\r\n\x05order\x18\x05 \x01(\x05\x12\x1e\n\x16turn_on_y_compensation\x18\x06 \x01(\x08\"\xeb\x01\n\x12\x46usionControlFlags\x12\x16\n\x0eturn_off_sonar\x18\x01 \x01(\x08\x12\x16\n\x0eturn_off_proxi\x18\x02 \x01(\x08\x12\x15\n\rturn_off_baro\x18\x03 \x01(\x08\x12\x14\n\x0cturn_off_gps\x18\x04 \x01(\x08\x12\x14\n\x0cturn_off_mag\x18\x05 \x01(\x08\x12\x18\n\x10turn_off_optflow\x18\x06 \x01(\x08\x12\x16\n\x0eturn_off_rovio\x18\x07 \x01(\x08\x12\x15\n\rturn_off_slam\x18\x08 \x01(\x08\x12\x19\n\x11turn_on_optitrack\x18\t \x01(\x08\"\xff\x01\n\rSensorsConfig\x12\x1e\n\x03imu\x18\x01 \x03(\x0b\x32\x11.config.IMUConfig\x12&\n\x07optflow\x18\x02 \x03(\x0b\x32\x15.config.OptflowConfig\x12\x1e\n\x03mag\x18\x03 \x03(\x0b\x32\x11.config.MagConfig\x12\x30\n\x0e\x63urrent_params\x18\x04 \x01(\x0b\x32\x18.config.MagCurrentParams\x12\x30\n\x0c\x66usion_flags\x18\x05 \x01(\x0b\x32\x1a.config.FusionControlFlags\x12\"\n\x05servo\x18\x06 \x03(\x0b\x32\x13.config.ServoConfig\"\x8d\x02\n\x0f\x46\x43\x44ynamicParams\x12-\n%roll_acc_ratio_in_default_air_density\x18\x01 \x01(\x02\x12#\n\x1broll_actuator_ratio_nominal\x18\x02 \x01(\x02\x12.\n&pitch_acc_ratio_in_default_air_density\x18\x03 \x01(\x02\x12$\n\x1cpitch_actuator_ratio_nominal\x18\x04 \x01(\x02\x12,\n$yaw_acc_ratio_in_default_air_density\x18\x05 \x01(\x02\x12\"\n\x1ayaw_actuator_ratio_nominal\x18\x06 \x01(\x02\"\xbd\n\n\x0b\x46\x43PIDParams\x12/\n\'horizon_x_position_kp_in_default_height\x18\x01 \x01(\x02\x12/\n\'horizon_y_position_kp_in_default_height\x18\x02 \x01(\x02\x12/\n\'horizon_x_velocity_kp_in_default_height\x18\x03 \x01(\x02\x12/\n\'horizon_x_velocity_ki_in_default_height\x18\x04 \x01(\x02\x12/\n\'horizon_x_velocity_kd_in_default_height\x18\x05 \x01(\x02\x12/\n\'horizon_y_velocity_kp_in_default_height\x18\x06 \x01(\x02\x12/\n\'horizon_y_velocity_ki_in_default_height\x18\x07 \x01(\x02\x12/\n\'horizon_y_velocity_kd_in_default_height\x18\x08 \x01(\x02\x12%\n\x1droll_ang_kp_in_default_height\x18\t \x01(\x02\x12%\n\x1droll_vel_kp_in_default_height\x18\n \x01(\x02\x12%\n\x1droll_vel_ki_in_default_height\x18\x0b \x01(\x02\x12%\n\x1droll_vel_kd_in_default_height\x18\x0c \x01(\x02\x12&\n\x1epitch_ang_kp_in_default_height\x18\r \x01(\x02\x12&\n\x1epitch_vel_kp_in_default_height\x18\x0e \x01(\x02\x12&\n\x1epitch_vel_ki_in_default_height\x18\x0f \x01(\x02\x12&\n\x1epitch_vel_kd_in_default_height\x18\x10 \x01(\x02\x12$\n\x1cyaw_ang_kp_in_default_height\x18\x11 \x01(\x02\x12$\n\x1cyaw_vel_kp_in_default_height\x18\x12 \x01(\x02\x12$\n\x1cyaw_vel_ki_in_default_height\x18\x13 \x01(\x02\x12$\n\x1cyaw_vel_kd_in_default_height\x18\x14 \x01(\x02\x12\'\n\x1fheight_pos_kp_in_default_height\x18\x15 \x01(\x02\x12\'\n\x1fheight_vel_kp_in_default_height\x18\x16 \x01(\x02\x12\'\n\x1fheight_vel_ki_in_default_height\x18\x17 \x01(\x02\x12\'\n\x1fheight_vel_kd_in_default_height\x18\x18 \x01(\x02\x12)\n!height_accel_kp_in_default_height\x18\x19 \x01(\x02\x12)\n!height_accel_ki_in_default_height\x18\x1a \x01(\x02\x12)\n!height_accel_kd_in_default_height\x18\x1b \x01(\x02\x12\x1b\n\x13\x63hannel6_param_name\x18\x1c \x01(\t\x12\x1b\n\x13\x63hannel7_param_name\x18\x1d \x01(\t\x12\x14\n\x0c\x63hannel6_min\x18\x1e \x01(\x02\x12\x14\n\x0c\x63hannel6_max\x18\x1f \x01(\x02\x12\x14\n\x0c\x63hannel7_min\x18  \x01(\x02\x12\x14\n\x0c\x63hannel7_max\x18! \x01(\x02\x12\x1b\n\x13\x65nable_wheel_tuning\x18\" \x01(\x08\"=\n\x0bHoverConfig\x12.\n\ndisconnect\x18\x01 \x01(\x0e\x32\x1a.config.DisconnectedAction\"\xd6\x01\n\x12\x46\x43\x43ontrollerParams\x12\x38\n\x14\x63ontroller_test_type\x18\x01 \x01(\x0e\x32\x1a.config.ControllerTestType\x12\x17\n\x0ftest_time_in_ms\x18\x02 \x01(\r\x12\x13\n\x0binput_max_x\x18\x03 \x01(\x02\x12\x13\n\x0binput_max_y\x18\x04 \x01(\x02\x12\x13\n\x0binput_max_z\x18\x05 \x01(\x02\x12\x15\n\rinput_max_yaw\x18\x06 \x01(\x02\x12\x17\n\x0finput_sinc_freq\x18\x07 \x01(\x02\"j\n\x10\x44roneSensitivity\x12\x1c\n\x14\x61ttitude_sensitivity\x18\x01 \x01(\x02\x12\x19\n\x11\x62rake_sensitivity\x18\x02 \x01(\x02\x12\x1d\n\x15yaw_speed_sensitivity\x18\x03 \x01(\x02\"\xaf\x02\n\x10\x46lyingParameters\x12\x14\n\x0cmax_attitude\x18\x01 \x01(\x02\x12!\n\x19max_roll_angular_velocity\x18\x02 \x01(\x02\x12\"\n\x1amax_pitch_angular_velocity\x18\x03 \x01(\x02\x12 \n\x18max_yaw_angular_velocity\x18\x04 \x01(\x02\x12\x1c\n\x14max_horizon_velocity\x18\x05 \x01(\x02\x12 \n\x18max_vertical_velocity_up\x18\x06 \x01(\x02\x12\"\n\x1amax_vertical_velocity_down\x18\x07 \x01(\x02\x12\x1d\n\x15takeoff_finish_height\x18\x08 \x01(\x02\x12\x19\n\x11land_pause_height\x18\t \x01(\x02\"\xa2\x01\n\x16PrecisionLandParameter\x12\x1c\n\x14max_horizon_velocity\x18\x01 \x01(\x02\x12\x1d\n\x15max_vertical_velocity\x18\x02 \x01(\x02\x12\x1d\n\x15start_search_altitude\x18\x03 \x01(\x02\x12\x15\n\rmax_yaw_speed\x18\x04 \x01(\x02\x12\x15\n\rsearch_radius\x18\x05 \x01(\x02\">\n\x13\x45mergencyStopParams\x12\'\n\x04type\x18\x01 \x01(\x0e\x32\x19.config.EmergencyStopType\"\xe9\x02\n\x08\x46\x43\x43onfig\x12 \n\x03pid\x18\x01 \x03(\x0b\x32\x13.config.FCPIDParams\x12#\n\x06servos\x18\x02 \x01(\x0b\x32\x13.config.ServoParams\x12\x35\n\x11\x63ontroller_params\x18\x03 \x01(\x0b\x32\x1a.config.FCControllerParams\x12\x33\n\x11\x64rone_sensitivity\x18\x04 \x01(\x0b\x32\x18.config.DroneSensitivity\x12/\n\rflying_params\x18\x05 \x01(\x0b\x32\x18.config.FlyingParameters\x12=\n\x15precision_land_params\x18\x06 \x01(\x0b\x32\x1e.config.PrecisionLandParameter\x12:\n\x15\x65mergency_stop_params\x18\x07 \x01(\x0b\x32\x1b.config.EmergencyStopParams\"1\n\x10ServoAngleParams\x12\r\n\x05scale\x18\x01 \x03(\x02\x12\x0e\n\x06offset\x18\x02 \x03(\x02\"`\n\x0bServoParams\x12\'\n\x05\x61lpha\x18\x01 \x01(\x0b\x32\x18.config.ServoAngleParams\x12(\n\x06lambda\x18\x02 \x01(\x0b\x32\x18.config.ServoAngleParams\"[\n\x13\x46lightControlConfig\x12&\n\x07sensors\x18\x01 \x01(\x0b\x32\x15.config.SensorsConfig\x12\x1c\n\x02\x66\x63\x18\x02 \x01(\x0b\x32\x10.config.FCConfig\"\x97\x01\n\x0b\x44roneConfig\x12&\n\x07sensors\x18\x01 \x01(\x0b\x32\x15.config.SensorsConfig\x12\x1c\n\x02\x66\x63\x18\x02 \x01(\x0b\x32\x10.config.FCConfig\x12\x1e\n\x03\x65is\x18\x03 \x01(\x0b\x32\x11.config.EISConfig\x12\"\n\x05hover\x18\x04 \x01(\x0b\x32\x13.config.HoverConfig\"k\n\x14\x43onfigurationCommand\x12.\n\x04type\x18\x01 \x01(\x0e\x32 .config.ConfigurationCommandType\x12#\n\x06\x63onfig\x18\x02 \x01(\x0b\x32\x13.config.DroneConfig\"O\n\x1c\x43onfigurationCommandResponse\x12\n\n\x02ok\x18\x01 \x01(\x08\x12#\n\x06\x63onfig\x18\x02 \x01(\x0b\x32\x13.config.DroneConfig\"4\n\x16MotorIrmck099Parameter\x12\x0b\n\x03reg\x18\x01 \x01(\r\x12\r\n\x05value\x18\x02 \x01(\r\"z\n\x0f\x45SCOneWayConfig\x12\n\n\x02id\x18\x01 \x01(\r\x12\x14\n\x0cneed_reverse\x18\x02 \x01(\x08\x12\x39\n\x0firmck099_params\x18\x03 \x01(\x0b\x32\x1e.config.MotorIrmck099ParameterH\x00\x42\n\n\x08\x65sc_type\"`\n\tESCConfig\x12)\n\x08\x64\x65\x66\x61ult_\x18\x01 \x01(\x0b\x32\x17.config.ESCOneWayConfig\x12(\n\x07\x63onfigs\x18\x02 \x03(\x0b\x32\x17.config.ESCOneWayConfig\"/\n\rDynamicConfig\x12\x1e\n\x03\x65sc\x18\x01 \x03(\x0b\x32\x11.config.ESCConfig*4\n\x12\x44isconnectedAction\x12\x0c\n\x08\x44oReturn\x10\x00\x12\x10\n\x0cKeepHovering\x10\x01*D\n\x12\x43ontrollerTestType\x12\x1c\n\x18TestFlyingUpAndBackwards\x10\x00\x12\x10\n\x0cTestSineWave\x10\x01*n\n\x11\x45mergencyStopType\x12\x1e\n\x1a\x45mergencyStopTypeFaultOnly\x10\x00\x12\x1c\n\x18\x45mergencyStopTypeDisable\x10\x01\x12\x1b\n\x17\x45mergencyStopTypeAlways\x10\x02*\xe2\x01\n\x18\x43onfigurationCommandType\x12\x1e\n\x1a\x43onfigurationCommandReload\x10\x00\x12\x1b\n\x17\x43onfigurationCommandGet\x10\x01\x12\x1e\n\x1a\x43onfigurationCommandUpdate\x10\x02\x12\x1d\n\x19\x43onfigurationCommandMerge\x10\x03\x12\"\n\x1e\x43onfigurationCommandGetDefault\x10\x04\x12&\n\"ConfigurationCommandRestoreDefault\x10\x05')

_DISCONNECTEDACTION = DESCRIPTOR.enum_types_by_name['DisconnectedAction']
DisconnectedAction = enum_type_wrapper.EnumTypeWrapper(_DISCONNECTEDACTION)
_CONTROLLERTESTTYPE = DESCRIPTOR.enum_types_by_name['ControllerTestType']
ControllerTestType = enum_type_wrapper.EnumTypeWrapper(_CONTROLLERTESTTYPE)
_EMERGENCYSTOPTYPE = DESCRIPTOR.enum_types_by_name['EmergencyStopType']
EmergencyStopType = enum_type_wrapper.EnumTypeWrapper(_EMERGENCYSTOPTYPE)
_CONFIGURATIONCOMMANDTYPE = DESCRIPTOR.enum_types_by_name['ConfigurationCommandType']
ConfigurationCommandType = enum_type_wrapper.EnumTypeWrapper(_CONFIGURATIONCOMMANDTYPE)
DoReturn = 0
KeepHovering = 1
TestFlyingUpAndBackwards = 0
TestSineWave = 1
EmergencyStopTypeFaultOnly = 0
EmergencyStopTypeDisable = 1
EmergencyStopTypeAlways = 2
ConfigurationCommandReload = 0
ConfigurationCommandGet = 1
ConfigurationCommandUpdate = 2
ConfigurationCommandMerge = 3
ConfigurationCommandGetDefault = 4
ConfigurationCommandRestoreDefault = 5


_VECTOR = DESCRIPTOR.message_types_by_name['Vector']
_MATRIX = DESCRIPTOR.message_types_by_name['Matrix']
_LINEARADJUST = DESCRIPTOR.message_types_by_name['LinearAdjust']
_EISCONFIG = DESCRIPTOR.message_types_by_name['EISConfig']
_IMUCONFIG = DESCRIPTOR.message_types_by_name['IMUConfig']
_SERVOCONFIG = DESCRIPTOR.message_types_by_name['ServoConfig']
_OPTFLOWCONFIG = DESCRIPTOR.message_types_by_name['OptflowConfig']
_MAGCONFIG = DESCRIPTOR.message_types_by_name['MagConfig']
_MAGCURRENTPOLYCOE = DESCRIPTOR.message_types_by_name['MagCurrentPolyCoe']
_MAGCURRENTPARAMS = DESCRIPTOR.message_types_by_name['MagCurrentParams']
_FUSIONCONTROLFLAGS = DESCRIPTOR.message_types_by_name['FusionControlFlags']
_SENSORSCONFIG = DESCRIPTOR.message_types_by_name['SensorsConfig']
_FCDYNAMICPARAMS = DESCRIPTOR.message_types_by_name['FCDynamicParams']
_FCPIDPARAMS = DESCRIPTOR.message_types_by_name['FCPIDParams']
_HOVERCONFIG = DESCRIPTOR.message_types_by_name['HoverConfig']
_FCCONTROLLERPARAMS = DESCRIPTOR.message_types_by_name['FCControllerParams']
_DRONESENSITIVITY = DESCRIPTOR.message_types_by_name['DroneSensitivity']
_FLYINGPARAMETERS = DESCRIPTOR.message_types_by_name['FlyingParameters']
_PRECISIONLANDPARAMETER = DESCRIPTOR.message_types_by_name['PrecisionLandParameter']
_EMERGENCYSTOPPARAMS = DESCRIPTOR.message_types_by_name['EmergencyStopParams']
_FCCONFIG = DESCRIPTOR.message_types_by_name['FCConfig']
_SERVOANGLEPARAMS = DESCRIPTOR.message_types_by_name['ServoAngleParams']
_SERVOPARAMS = DESCRIPTOR.message_types_by_name['ServoParams']
_FLIGHTCONTROLCONFIG = DESCRIPTOR.message_types_by_name['FlightControlConfig']
_DRONECONFIG = DESCRIPTOR.message_types_by_name['DroneConfig']
_CONFIGURATIONCOMMAND = DESCRIPTOR.message_types_by_name['ConfigurationCommand']
_CONFIGURATIONCOMMANDRESPONSE = DESCRIPTOR.message_types_by_name['ConfigurationCommandResponse']
_MOTORIRMCK099PARAMETER = DESCRIPTOR.message_types_by_name['MotorIrmck099Parameter']
_ESCONEWAYCONFIG = DESCRIPTOR.message_types_by_name['ESCOneWayConfig']
_ESCCONFIG = DESCRIPTOR.message_types_by_name['ESCConfig']
_DYNAMICCONFIG = DESCRIPTOR.message_types_by_name['DynamicConfig']
Vector = _reflection.GeneratedProtocolMessageType('Vector', (_message.Message,), {
  'DESCRIPTOR' : _VECTOR,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.Vector)
  })
_sym_db.RegisterMessage(Vector)

Matrix = _reflection.GeneratedProtocolMessageType('Matrix', (_message.Message,), {
  'DESCRIPTOR' : _MATRIX,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.Matrix)
  })
_sym_db.RegisterMessage(Matrix)

LinearAdjust = _reflection.GeneratedProtocolMessageType('LinearAdjust', (_message.Message,), {
  'DESCRIPTOR' : _LINEARADJUST,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.LinearAdjust)
  })
_sym_db.RegisterMessage(LinearAdjust)

EISConfig = _reflection.GeneratedProtocolMessageType('EISConfig', (_message.Message,), {
  'DESCRIPTOR' : _EISCONFIG,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.EISConfig)
  })
_sym_db.RegisterMessage(EISConfig)

IMUConfig = _reflection.GeneratedProtocolMessageType('IMUConfig', (_message.Message,), {
  'DESCRIPTOR' : _IMUCONFIG,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.IMUConfig)
  })
_sym_db.RegisterMessage(IMUConfig)

ServoConfig = _reflection.GeneratedProtocolMessageType('ServoConfig', (_message.Message,), {
  'DESCRIPTOR' : _SERVOCONFIG,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.ServoConfig)
  })
_sym_db.RegisterMessage(ServoConfig)

OptflowConfig = _reflection.GeneratedProtocolMessageType('OptflowConfig', (_message.Message,), {
  'DESCRIPTOR' : _OPTFLOWCONFIG,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.OptflowConfig)
  })
_sym_db.RegisterMessage(OptflowConfig)

MagConfig = _reflection.GeneratedProtocolMessageType('MagConfig', (_message.Message,), {
  'DESCRIPTOR' : _MAGCONFIG,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.MagConfig)
  })
_sym_db.RegisterMessage(MagConfig)

MagCurrentPolyCoe = _reflection.GeneratedProtocolMessageType('MagCurrentPolyCoe', (_message.Message,), {
  'DESCRIPTOR' : _MAGCURRENTPOLYCOE,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.MagCurrentPolyCoe)
  })
_sym_db.RegisterMessage(MagCurrentPolyCoe)

MagCurrentParams = _reflection.GeneratedProtocolMessageType('MagCurrentParams', (_message.Message,), {
  'DESCRIPTOR' : _MAGCURRENTPARAMS,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.MagCurrentParams)
  })
_sym_db.RegisterMessage(MagCurrentParams)

FusionControlFlags = _reflection.GeneratedProtocolMessageType('FusionControlFlags', (_message.Message,), {
  'DESCRIPTOR' : _FUSIONCONTROLFLAGS,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.FusionControlFlags)
  })
_sym_db.RegisterMessage(FusionControlFlags)

SensorsConfig = _reflection.GeneratedProtocolMessageType('SensorsConfig', (_message.Message,), {
  'DESCRIPTOR' : _SENSORSCONFIG,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.SensorsConfig)
  })
_sym_db.RegisterMessage(SensorsConfig)

FCDynamicParams = _reflection.GeneratedProtocolMessageType('FCDynamicParams', (_message.Message,), {
  'DESCRIPTOR' : _FCDYNAMICPARAMS,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.FCDynamicParams)
  })
_sym_db.RegisterMessage(FCDynamicParams)

FCPIDParams = _reflection.GeneratedProtocolMessageType('FCPIDParams', (_message.Message,), {
  'DESCRIPTOR' : _FCPIDPARAMS,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.FCPIDParams)
  })
_sym_db.RegisterMessage(FCPIDParams)

HoverConfig = _reflection.GeneratedProtocolMessageType('HoverConfig', (_message.Message,), {
  'DESCRIPTOR' : _HOVERCONFIG,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.HoverConfig)
  })
_sym_db.RegisterMessage(HoverConfig)

FCControllerParams = _reflection.GeneratedProtocolMessageType('FCControllerParams', (_message.Message,), {
  'DESCRIPTOR' : _FCCONTROLLERPARAMS,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.FCControllerParams)
  })
_sym_db.RegisterMessage(FCControllerParams)

DroneSensitivity = _reflection.GeneratedProtocolMessageType('DroneSensitivity', (_message.Message,), {
  'DESCRIPTOR' : _DRONESENSITIVITY,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.DroneSensitivity)
  })
_sym_db.RegisterMessage(DroneSensitivity)

FlyingParameters = _reflection.GeneratedProtocolMessageType('FlyingParameters', (_message.Message,), {
  'DESCRIPTOR' : _FLYINGPARAMETERS,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.FlyingParameters)
  })
_sym_db.RegisterMessage(FlyingParameters)

PrecisionLandParameter = _reflection.GeneratedProtocolMessageType('PrecisionLandParameter', (_message.Message,), {
  'DESCRIPTOR' : _PRECISIONLANDPARAMETER,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.PrecisionLandParameter)
  })
_sym_db.RegisterMessage(PrecisionLandParameter)

EmergencyStopParams = _reflection.GeneratedProtocolMessageType('EmergencyStopParams', (_message.Message,), {
  'DESCRIPTOR' : _EMERGENCYSTOPPARAMS,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.EmergencyStopParams)
  })
_sym_db.RegisterMessage(EmergencyStopParams)

FCConfig = _reflection.GeneratedProtocolMessageType('FCConfig', (_message.Message,), {
  'DESCRIPTOR' : _FCCONFIG,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.FCConfig)
  })
_sym_db.RegisterMessage(FCConfig)

ServoAngleParams = _reflection.GeneratedProtocolMessageType('ServoAngleParams', (_message.Message,), {
  'DESCRIPTOR' : _SERVOANGLEPARAMS,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.ServoAngleParams)
  })
_sym_db.RegisterMessage(ServoAngleParams)

ServoParams = _reflection.GeneratedProtocolMessageType('ServoParams', (_message.Message,), {
  'DESCRIPTOR' : _SERVOPARAMS,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.ServoParams)
  })
_sym_db.RegisterMessage(ServoParams)

FlightControlConfig = _reflection.GeneratedProtocolMessageType('FlightControlConfig', (_message.Message,), {
  'DESCRIPTOR' : _FLIGHTCONTROLCONFIG,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.FlightControlConfig)
  })
_sym_db.RegisterMessage(FlightControlConfig)

DroneConfig = _reflection.GeneratedProtocolMessageType('DroneConfig', (_message.Message,), {
  'DESCRIPTOR' : _DRONECONFIG,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.DroneConfig)
  })
_sym_db.RegisterMessage(DroneConfig)

ConfigurationCommand = _reflection.GeneratedProtocolMessageType('ConfigurationCommand', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGURATIONCOMMAND,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.ConfigurationCommand)
  })
_sym_db.RegisterMessage(ConfigurationCommand)

ConfigurationCommandResponse = _reflection.GeneratedProtocolMessageType('ConfigurationCommandResponse', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGURATIONCOMMANDRESPONSE,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.ConfigurationCommandResponse)
  })
_sym_db.RegisterMessage(ConfigurationCommandResponse)

MotorIrmck099Parameter = _reflection.GeneratedProtocolMessageType('MotorIrmck099Parameter', (_message.Message,), {
  'DESCRIPTOR' : _MOTORIRMCK099PARAMETER,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.MotorIrmck099Parameter)
  })
_sym_db.RegisterMessage(MotorIrmck099Parameter)

ESCOneWayConfig = _reflection.GeneratedProtocolMessageType('ESCOneWayConfig', (_message.Message,), {
  'DESCRIPTOR' : _ESCONEWAYCONFIG,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.ESCOneWayConfig)
  })
_sym_db.RegisterMessage(ESCOneWayConfig)

ESCConfig = _reflection.GeneratedProtocolMessageType('ESCConfig', (_message.Message,), {
  'DESCRIPTOR' : _ESCCONFIG,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.ESCConfig)
  })
_sym_db.RegisterMessage(ESCConfig)

DynamicConfig = _reflection.GeneratedProtocolMessageType('DynamicConfig', (_message.Message,), {
  'DESCRIPTOR' : _DYNAMICCONFIG,
  '__module__' : 'configuration_pb2'
  # @@protoc_insertion_point(class_scope:config.DynamicConfig)
  })
_sym_db.RegisterMessage(DynamicConfig)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _DISCONNECTEDACTION._serialized_start=5171
  _DISCONNECTEDACTION._serialized_end=5223
  _CONTROLLERTESTTYPE._serialized_start=5225
  _CONTROLLERTESTTYPE._serialized_end=5293
  _EMERGENCYSTOPTYPE._serialized_start=5295
  _EMERGENCYSTOPTYPE._serialized_end=5405
  _CONFIGURATIONCOMMANDTYPE._serialized_start=5408
  _CONFIGURATIONCOMMANDTYPE._serialized_end=5634
  _VECTOR._serialized_start=31
  _VECTOR._serialized_end=55
  _MATRIX._serialized_start=57
  _MATRIX._serialized_end=95
  _LINEARADJUST._serialized_start=97
  _LINEARADJUST._serialized_end=172
  _EISCONFIG._serialized_start=174
  _EISCONFIG._serialized_end=209
  _IMUCONFIG._serialized_start=212
  _IMUCONFIG._serialized_end=357
  _SERVOCONFIG._serialized_start=359
  _SERVOCONFIG._serialized_end=424
  _OPTFLOWCONFIG._serialized_start=426
  _OPTFLOWCONFIG._serialized_end=468
  _MAGCONFIG._serialized_start=470
  _MAGCONFIG._serialized_end=543
  _MAGCURRENTPOLYCOE._serialized_start=545
  _MAGCURRENTPOLYCOE._serialized_end=591
  _MAGCURRENTPARAMS._serialized_start=594
  _MAGCURRENTPARAMS._serialized_end=859
  _FUSIONCONTROLFLAGS._serialized_start=862
  _FUSIONCONTROLFLAGS._serialized_end=1097
  _SENSORSCONFIG._serialized_start=1100
  _SENSORSCONFIG._serialized_end=1355
  _FCDYNAMICPARAMS._serialized_start=1358
  _FCDYNAMICPARAMS._serialized_end=1627
  _FCPIDPARAMS._serialized_start=1630
  _FCPIDPARAMS._serialized_end=2971
  _HOVERCONFIG._serialized_start=2973
  _HOVERCONFIG._serialized_end=3034
  _FCCONTROLLERPARAMS._serialized_start=3037
  _FCCONTROLLERPARAMS._serialized_end=3251
  _DRONESENSITIVITY._serialized_start=3253
  _DRONESENSITIVITY._serialized_end=3359
  _FLYINGPARAMETERS._serialized_start=3362
  _FLYINGPARAMETERS._serialized_end=3665
  _PRECISIONLANDPARAMETER._serialized_start=3668
  _PRECISIONLANDPARAMETER._serialized_end=3830
  _EMERGENCYSTOPPARAMS._serialized_start=3832
  _EMERGENCYSTOPPARAMS._serialized_end=3894
  _FCCONFIG._serialized_start=3897
  _FCCONFIG._serialized_end=4258
  _SERVOANGLEPARAMS._serialized_start=4260
  _SERVOANGLEPARAMS._serialized_end=4309
  _SERVOPARAMS._serialized_start=4311
  _SERVOPARAMS._serialized_end=4407
  _FLIGHTCONTROLCONFIG._serialized_start=4409
  _FLIGHTCONTROLCONFIG._serialized_end=4500
  _DRONECONFIG._serialized_start=4503
  _DRONECONFIG._serialized_end=4654
  _CONFIGURATIONCOMMAND._serialized_start=4656
  _CONFIGURATIONCOMMAND._serialized_end=4763
  _CONFIGURATIONCOMMANDRESPONSE._serialized_start=4765
  _CONFIGURATIONCOMMANDRESPONSE._serialized_end=4844
  _MOTORIRMCK099PARAMETER._serialized_start=4846
  _MOTORIRMCK099PARAMETER._serialized_end=4898
  _ESCONEWAYCONFIG._serialized_start=4900
  _ESCONEWAYCONFIG._serialized_end=5022
  _ESCCONFIG._serialized_start=5024
  _ESCCONFIG._serialized_end=5120
  _DYNAMICCONFIG._serialized_start=5122
  _DYNAMICCONFIG._serialized_end=5169
# @@protoc_insertion_point(module_scope)
