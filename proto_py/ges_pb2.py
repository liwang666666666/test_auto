# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ges.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import base_pb2 as base__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\tges.proto\x12\x03ges\x1a\nbase.proto\"\x9f\x05\n\nLimitState\x12:\n\x0elimit_distance\x18\x01 \x01(\x0e\x32\".ges.LimitState.LimitDistanceState\x12\x36\n\x0climit_height\x18\x02 \x01(\x0e\x32 .ges.LimitState.LimitHeightState\x12\x32\n\nlimit_zone\x18\x03 \x01(\x0e\x32\x1e.ges.LimitState.LimitZoneState\"C\n\x12LimitDistanceState\x12\x15\n\x11LimitDistanceNone\x10\x00\x12\x16\n\x12ReachLimitDistance\x10\x01\"X\n\x10LimitHeightState\x12\x13\n\x0fLimitHeightNone\x10\x00\x12\x14\n\x10ReachLimitHeight\x10\x01\x12\x19\n\x15ReachLimitHeightNoGPS\x10\x02\"\xc9\x02\n\x0eLimitZoneState\x12\x11\n\rLimitZoneNone\x10\x00\x12\x12\n\x0eInLimitFlyZone\x10\x01\x12\x17\n\x13TouchedLimitFlyZone\x10\x02\x12\x18\n\x14\x41pproachLimitFlyZone\x10\x03\x12\x19\n\x15HasLimitFlyZoneNearby\x10\x04\x12(\n$NoGPSInDroneAndControllerInNoFlyZone\x10\x05\x12\x11\n\rInLimitHeight\x10\x06\x12\x17\n\x13\x41pproachLimitHeight\x10\x07\x12\x15\n\x11\x45xceedLimitHeight\x10\x08\x12\x1a\n\x16TouchedLimitHeightZone\x10\t\x12\x1b\n\x17\x41pproachLimitHeightZone\x10\n\x12\x1c\n\x18HasLimitHeightZoneNearby\x10\x0b\"\xb2\x03\n\x08GESState\x12*\n\tges_state\x18\x01 \x01(\x0e\x32\x17.ges.GESState.StateType\x12)\n\tzone_type\x18\x02 \x01(\x0e\x32\x16.ges.GESState.ZoneType\x12$\n\x0blimit_state\x18\x03 \x01(\x0b\x32\x0f.ges.LimitState\x12\x0f\n\x07zone_id\x18\x04 \x01(\x04\"}\n\tStateType\x12\r\n\tStateStop\x10\x00\x12\x0f\n\x0bStateNormal\x10\x01\x12\x13\n\x0fStateInitiating\x10\x02\x12\x13\n\x0fStateInitFailed\x10\x03\x12\x0e\n\nStateNoGPS\x10\x04\x12\x16\n\x12StateClientGPSOnly\x10\x05\"\x98\x01\n\x08ZoneType\x12\x10\n\x0cZoneTypeNone\x10\x00\x12\x10\n\x0cZoneTypeFree\x10\x01\x12\x11\n\rZoneTypeNoFly\x10\x02\x12\x13\n\x0fZoneTypeWarning\x10\x03\x12\x1a\n\x16ZoneTypeEnhanceWarning\x10\x04\x12\x10\n\x0cZoneTypeAuth\x10\x05\x12\x12\n\x0eZoneTypeHeight\x10\x06\"V\n\nGESGeoInfo\x12\x0f\n\x07name_id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x14\n\x0c\x63ountry_code\x18\x03 \x01(\t\x12\x13\n\x0btimezone_id\x18\x04 \x01(\t\"=\n\x0eGESDataVersion\x12\r\n\x05major\x18\x01 \x01(\r\x12\r\n\x05minor\x18\x02 \x01(\r\x12\r\n\x05patch\x18\x03 \x01(\r\"\x9c\x01\n\x0bGESDataInfo\x12$\n\x07version\x18\x01 \x01(\x0b\x32\x13.ges.GESDataVersion\x12\x33\n\x14zone_data_load_state\x18\x02 \x01(\x0e\x32\x15.ges.GESDataLoadState\x12\x32\n\x13geo_data_load_state\x18\x03 \x01(\x0e\x32\x15.ges.GESDataLoadState\"K\n\nGESRequest\x12\x1e\n\x06\x61\x63tion\x18\x01 \x01(\x0e\x32\x0e.ges.GESAction\x12\x1d\n\x08velocity\x18\x02 \x01(\x0b\x32\x0b.base.Vec3f\"s\n\x07GESInfo\x12\x1c\n\x05state\x18\x01 \x01(\x0b\x32\r.ges.GESState\x12!\n\x08geo_info\x18\x02 \x01(\x0b\x32\x0f.ges.GESGeoInfo\x12\'\n\rges_data_info\x18\x03 \x01(\x0b\x32\x10.ges.GESDataInfo\"G\n\x0bGESResponse\x12\r\n\x05is_ok\x18\x01 \x01(\x08\x12\x1a\n\x04info\x18\x02 \x01(\x0b\x32\x0c.ges.GESInfo\x12\r\n\x05v_max\x18\x03 \x01(\x02*F\n\tGESAction\x12\x12\n\x0eGESActionStart\x10\x00\x12\x11\n\rGESActionStop\x10\x01\x12\x12\n\x0eGESActionCheck\x10\x02*\x83\x01\n\x10GESDataLoadState\x12\x13\n\x0fGESDataLoadNone\x10\x00\x12\x12\n\x0eGESDataLoading\x10\x01\x12\x16\n\x12GESDataLoadSuccess\x10\x02\x12\x15\n\x11GESDataLoadFailed\x10\x03\x12\x17\n\x13GESDataLoadNotExist\x10\x04*F\n\x13GESDataUpgradeEvent\x12\x17\n\x13GESDataUpgradeStart\x10\x00\x12\x16\n\x12GESDataUpgradeDone\x10\x01\x62\x06proto3')

_GESACTION = DESCRIPTOR.enum_types_by_name['GESAction']
GESAction = enum_type_wrapper.EnumTypeWrapper(_GESACTION)
_GESDATALOADSTATE = DESCRIPTOR.enum_types_by_name['GESDataLoadState']
GESDataLoadState = enum_type_wrapper.EnumTypeWrapper(_GESDATALOADSTATE)
_GESDATAUPGRADEEVENT = DESCRIPTOR.enum_types_by_name['GESDataUpgradeEvent']
GESDataUpgradeEvent = enum_type_wrapper.EnumTypeWrapper(_GESDATAUPGRADEEVENT)
GESActionStart = 0
GESActionStop = 1
GESActionCheck = 2
GESDataLoadNone = 0
GESDataLoading = 1
GESDataLoadSuccess = 2
GESDataLoadFailed = 3
GESDataLoadNotExist = 4
GESDataUpgradeStart = 0
GESDataUpgradeDone = 1


_LIMITSTATE = DESCRIPTOR.message_types_by_name['LimitState']
_GESSTATE = DESCRIPTOR.message_types_by_name['GESState']
_GESGEOINFO = DESCRIPTOR.message_types_by_name['GESGeoInfo']
_GESDATAVERSION = DESCRIPTOR.message_types_by_name['GESDataVersion']
_GESDATAINFO = DESCRIPTOR.message_types_by_name['GESDataInfo']
_GESREQUEST = DESCRIPTOR.message_types_by_name['GESRequest']
_GESINFO = DESCRIPTOR.message_types_by_name['GESInfo']
_GESRESPONSE = DESCRIPTOR.message_types_by_name['GESResponse']
_LIMITSTATE_LIMITDISTANCESTATE = _LIMITSTATE.enum_types_by_name['LimitDistanceState']
_LIMITSTATE_LIMITHEIGHTSTATE = _LIMITSTATE.enum_types_by_name['LimitHeightState']
_LIMITSTATE_LIMITZONESTATE = _LIMITSTATE.enum_types_by_name['LimitZoneState']
_GESSTATE_STATETYPE = _GESSTATE.enum_types_by_name['StateType']
_GESSTATE_ZONETYPE = _GESSTATE.enum_types_by_name['ZoneType']
LimitState = _reflection.GeneratedProtocolMessageType('LimitState', (_message.Message,), {
  'DESCRIPTOR' : _LIMITSTATE,
  '__module__' : 'ges_pb2'
  # @@protoc_insertion_point(class_scope:ges.LimitState)
  })
_sym_db.RegisterMessage(LimitState)

GESState = _reflection.GeneratedProtocolMessageType('GESState', (_message.Message,), {
  'DESCRIPTOR' : _GESSTATE,
  '__module__' : 'ges_pb2'
  # @@protoc_insertion_point(class_scope:ges.GESState)
  })
_sym_db.RegisterMessage(GESState)

GESGeoInfo = _reflection.GeneratedProtocolMessageType('GESGeoInfo', (_message.Message,), {
  'DESCRIPTOR' : _GESGEOINFO,
  '__module__' : 'ges_pb2'
  # @@protoc_insertion_point(class_scope:ges.GESGeoInfo)
  })
_sym_db.RegisterMessage(GESGeoInfo)

GESDataVersion = _reflection.GeneratedProtocolMessageType('GESDataVersion', (_message.Message,), {
  'DESCRIPTOR' : _GESDATAVERSION,
  '__module__' : 'ges_pb2'
  # @@protoc_insertion_point(class_scope:ges.GESDataVersion)
  })
_sym_db.RegisterMessage(GESDataVersion)

GESDataInfo = _reflection.GeneratedProtocolMessageType('GESDataInfo', (_message.Message,), {
  'DESCRIPTOR' : _GESDATAINFO,
  '__module__' : 'ges_pb2'
  # @@protoc_insertion_point(class_scope:ges.GESDataInfo)
  })
_sym_db.RegisterMessage(GESDataInfo)

GESRequest = _reflection.GeneratedProtocolMessageType('GESRequest', (_message.Message,), {
  'DESCRIPTOR' : _GESREQUEST,
  '__module__' : 'ges_pb2'
  # @@protoc_insertion_point(class_scope:ges.GESRequest)
  })
_sym_db.RegisterMessage(GESRequest)

GESInfo = _reflection.GeneratedProtocolMessageType('GESInfo', (_message.Message,), {
  'DESCRIPTOR' : _GESINFO,
  '__module__' : 'ges_pb2'
  # @@protoc_insertion_point(class_scope:ges.GESInfo)
  })
_sym_db.RegisterMessage(GESInfo)

GESResponse = _reflection.GeneratedProtocolMessageType('GESResponse', (_message.Message,), {
  'DESCRIPTOR' : _GESRESPONSE,
  '__module__' : 'ges_pb2'
  # @@protoc_insertion_point(class_scope:ges.GESResponse)
  })
_sym_db.RegisterMessage(GESResponse)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _GESACTION._serialized_start=1718
  _GESACTION._serialized_end=1788
  _GESDATALOADSTATE._serialized_start=1791
  _GESDATALOADSTATE._serialized_end=1922
  _GESDATAUPGRADEEVENT._serialized_start=1924
  _GESDATAUPGRADEEVENT._serialized_end=1994
  _LIMITSTATE._serialized_start=31
  _LIMITSTATE._serialized_end=702
  _LIMITSTATE_LIMITDISTANCESTATE._serialized_start=213
  _LIMITSTATE_LIMITDISTANCESTATE._serialized_end=280
  _LIMITSTATE_LIMITHEIGHTSTATE._serialized_start=282
  _LIMITSTATE_LIMITHEIGHTSTATE._serialized_end=370
  _LIMITSTATE_LIMITZONESTATE._serialized_start=373
  _LIMITSTATE_LIMITZONESTATE._serialized_end=702
  _GESSTATE._serialized_start=705
  _GESSTATE._serialized_end=1139
  _GESSTATE_STATETYPE._serialized_start=859
  _GESSTATE_STATETYPE._serialized_end=984
  _GESSTATE_ZONETYPE._serialized_start=987
  _GESSTATE_ZONETYPE._serialized_end=1139
  _GESGEOINFO._serialized_start=1141
  _GESGEOINFO._serialized_end=1227
  _GESDATAVERSION._serialized_start=1229
  _GESDATAVERSION._serialized_end=1290
  _GESDATAINFO._serialized_start=1293
  _GESDATAINFO._serialized_end=1449
  _GESREQUEST._serialized_start=1451
  _GESREQUEST._serialized_end=1526
  _GESINFO._serialized_start=1528
  _GESINFO._serialized_end=1643
  _GESRESPONSE._serialized_start=1645
  _GESRESPONSE._serialized_end=1716
# @@protoc_insertion_point(module_scope)
